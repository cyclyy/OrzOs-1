!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASFLAGS	Makefile	/^ASFLAGS=-felf$/;"	m
ASSERT	common.h	8;"	d
AT_BASE	elfdef.h	786;"	d
AT_BASE_PLATFORM	elfdef.h	816;"	d
AT_CLKTCK	elfdef.h	794;"	d
AT_DCACHEBSIZE	elfdef.h	806;"	d
AT_EGID	elfdef.h	793;"	d
AT_ENTRY	elfdef.h	788;"	d
AT_EUID	elfdef.h	791;"	d
AT_EXECFD	elfdef.h	781;"	d
AT_EXECFN	elfdef.h	820;"	d
AT_FLAGS	elfdef.h	787;"	d
AT_FPUCW	elfdef.h	803;"	d
AT_GID	elfdef.h	792;"	d
AT_HWCAP	elfdef.h	798;"	d
AT_ICACHEBSIZE	elfdef.h	807;"	d
AT_IGNORE	elfdef.h	780;"	d
AT_IGNOREPPC	elfdef.h	812;"	d
AT_L1D_CACHESHAPE	elfdef.h	830;"	d
AT_L1I_CACHESHAPE	elfdef.h	829;"	d
AT_L2_CACHESHAPE	elfdef.h	831;"	d
AT_L3_CACHESHAPE	elfdef.h	832;"	d
AT_NOTELF	elfdef.h	789;"	d
AT_NULL	elfdef.h	779;"	d
AT_PAGESZ	elfdef.h	785;"	d
AT_PHDR	elfdef.h	782;"	d
AT_PHENT	elfdef.h	783;"	d
AT_PHNUM	elfdef.h	784;"	d
AT_PLATFORM	elfdef.h	797;"	d
AT_RANDOM	elfdef.h	818;"	d
AT_SECURE	elfdef.h	814;"	d
AT_SYSINFO	elfdef.h	824;"	d
AT_SYSINFO_EHDR	elfdef.h	825;"	d
AT_UCACHEBSIZE	elfdef.h	808;"	d
AT_UID	elfdef.h	790;"	d
CFLAGS	Makefile	/^CFLAGS=-nostdlib -nostdinc -fno-builtin -fno-stack-protector -Wall -I.$/;"	m
COMMON_H	common.h	2;"	d
CORE_LDFLAGS	Makefile	/^CORE_LDFLAGS=-Tcore.ld -M=allsymbol.map$/;"	m
CORE_SOURCES	Makefile	/^CORE_SOURCES=boot.o              \\$/;"	m
DECL_SYSCALL_0	syscall.h	6;"	d
DECL_SYSCALL_1	syscall.h	7;"	d
DECL_SYSCALL_2	syscall.h	8;"	d
DECL_SYSCALL_3	syscall.h	9;"	d
DECL_SYSCALL_4	syscall.h	10;"	d
DECL_SYSCALL_5	syscall.h	11;"	d
DEFN_SYSCALL_0	syscall.h	13;"	d
DEFN_SYSCALL_1	syscall.h	21;"	d
DEFN_SYSCALL_2	syscall.h	29;"	d
DEFN_SYSCALL_3	syscall.h	38;"	d
DEFN_SYSCALL_4	syscall.h	47;"	d
DEFN_SYSCALL_5	syscall.h	56;"	d
DEF_IRQ	interrupt.s	/^DEF_IRQ 0,32$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 1,33$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 10,42$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 11,43$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 12,44$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 13,45$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 14,46$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 2,34$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 3,35$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 4,36$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 5,37$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 6,38$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 7,39$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 8,40$/;"	l
DEF_IRQ	interrupt.s	/^DEF_IRQ 9,41$/;"	l
DEF_ISR_ERRCODE	interrupt.s	/^DEF_ISR_ERRCODE 10  ; invalid tss$/;"	l
DEF_ISR_ERRCODE	interrupt.s	/^DEF_ISR_ERRCODE 11  ;$/;"	l
DEF_ISR_ERRCODE	interrupt.s	/^DEF_ISR_ERRCODE 12  ; stack exception$/;"	l
DEF_ISR_ERRCODE	interrupt.s	/^DEF_ISR_ERRCODE 13  ; general protection exception$/;"	l
DEF_ISR_ERRCODE	interrupt.s	/^DEF_ISR_ERRCODE 14  ; page fault$/;"	l
DEF_ISR_ERRCODE	interrupt.s	/^DEF_ISR_ERRCODE 8   ; double fault$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 0 ; divide zero$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 1 ; debug exceptions$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 128$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 15 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 16 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 17 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 18 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 19 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 2 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 20 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 21 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 22 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 23 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 24 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 25 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 26 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 27 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 28 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 29 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 3 ; breakpoint$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 30 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 31 $/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 4 ; overflow$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 5 ; bounds check$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 6 ; invalid opcode$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 7 ; coprocessor not available$/;"	l
DEF_ISR_NOERRCODE	interrupt.s	/^DEF_ISR_NOERRCODE 9 $/;"	l
DESC_TABLE_H	desc_table.h	2;"	d
DF_1_CONFALT	elfdef.h	666;"	d
DF_1_DIRECT	elfdef.h	661;"	d
DF_1_DISPRELDNE	elfdef.h	668;"	d
DF_1_DISPRELPND	elfdef.h	669;"	d
DF_1_ENDFILTEE	elfdef.h	667;"	d
DF_1_GLOBAL	elfdef.h	654;"	d
DF_1_GROUP	elfdef.h	655;"	d
DF_1_INITFIRST	elfdef.h	658;"	d
DF_1_INTERPOSE	elfdef.h	663;"	d
DF_1_LOADFLTR	elfdef.h	657;"	d
DF_1_NODEFLIB	elfdef.h	664;"	d
DF_1_NODELETE	elfdef.h	656;"	d
DF_1_NODUMP	elfdef.h	665;"	d
DF_1_NOOPEN	elfdef.h	659;"	d
DF_1_NOW	elfdef.h	653;"	d
DF_1_ORIGIN	elfdef.h	660;"	d
DF_1_TRANS	elfdef.h	662;"	d
DF_BIND_NOW	elfdef.h	648;"	d
DF_ORIGIN	elfdef.h	645;"	d
DF_P1_GROUPPERM	elfdef.h	677;"	d
DF_P1_LAZYLOAD	elfdef.h	676;"	d
DF_STATIC_TLS	elfdef.h	649;"	d
DF_SYMBOLIC	elfdef.h	646;"	d
DF_TEXTREL	elfdef.h	647;"	d
DTF_1_CONFEXP	elfdef.h	673;"	d
DTF_1_PARINIT	elfdef.h	672;"	d
DT_ADDRNUM	elfdef.h	617;"	d
DT_ADDRRNGHI	elfdef.h	615;"	d
DT_ADDRRNGLO	elfdef.h	603;"	d
DT_ADDRTAGIDX	elfdef.h	616;"	d
DT_ALPHA_NUM	elfdef.h	1780;"	d
DT_ALPHA_PLTRO	elfdef.h	1779;"	d
DT_AUDIT	elfdef.h	611;"	d
DT_AUXILIARY	elfdef.h	639;"	d
DT_BIND_NOW	elfdef.h	561;"	d
DT_CHECKSUM	elfdef.h	585;"	d
DT_CONFIG	elfdef.h	609;"	d
DT_DEBUG	elfdef.h	558;"	d
DT_DEPAUDIT	elfdef.h	610;"	d
DT_ENCODING	elfdef.h	568;"	d
DT_EXTRANUM	elfdef.h	642;"	d
DT_EXTRATAGIDX	elfdef.h	641;"	d
DT_FEATURE_1	elfdef.h	589;"	d
DT_FILTER	elfdef.h	640;"	d
DT_FINI	elfdef.h	550;"	d
DT_FINI_ARRAY	elfdef.h	563;"	d
DT_FINI_ARRAYSZ	elfdef.h	565;"	d
DT_FLAGS	elfdef.h	567;"	d
DT_FLAGS_1	elfdef.h	627;"	d
DT_GNU_CONFLICT	elfdef.h	607;"	d
DT_GNU_CONFLICTSZ	elfdef.h	583;"	d
DT_GNU_HASH	elfdef.h	604;"	d
DT_GNU_LIBLIST	elfdef.h	608;"	d
DT_GNU_LIBLISTSZ	elfdef.h	584;"	d
DT_GNU_PRELINKED	elfdef.h	582;"	d
DT_HASH	elfdef.h	541;"	d
DT_HIOS	elfdef.h	573;"	d
DT_HIPROC	elfdef.h	575;"	d
DT_IA_64_NUM	elfdef.h	2179;"	d
DT_IA_64_PLT_RESERVE	elfdef.h	2178;"	d
DT_INIT	elfdef.h	549;"	d
DT_INIT_ARRAY	elfdef.h	562;"	d
DT_INIT_ARRAYSZ	elfdef.h	564;"	d
DT_JMPREL	elfdef.h	560;"	d
DT_LOOS	elfdef.h	572;"	d
DT_LOPROC	elfdef.h	574;"	d
DT_MIPS_AUX_DYNAMIC	elfdef.h	1465;"	d
DT_MIPS_BASE_ADDRESS	elfdef.h	1419;"	d
DT_MIPS_COMPACT_SIZE	elfdef.h	1463;"	d
DT_MIPS_CONFLICT	elfdef.h	1421;"	d
DT_MIPS_CONFLICTNO	elfdef.h	1424;"	d
DT_MIPS_CXX_FLAGS	elfdef.h	1448;"	d
DT_MIPS_DELTA_CLASS	elfdef.h	1431;"	d
DT_MIPS_DELTA_CLASSSYM	elfdef.h	1444;"	d
DT_MIPS_DELTA_CLASSSYM_NO	elfdef.h	1446;"	d
DT_MIPS_DELTA_CLASS_NO	elfdef.h	1432;"	d
DT_MIPS_DELTA_INSTANCE	elfdef.h	1434;"	d
DT_MIPS_DELTA_INSTANCE_NO	elfdef.h	1435;"	d
DT_MIPS_DELTA_RELOC	elfdef.h	1437;"	d
DT_MIPS_DELTA_RELOC_NO	elfdef.h	1438;"	d
DT_MIPS_DELTA_SYM	elfdef.h	1440;"	d
DT_MIPS_DELTA_SYM_NO	elfdef.h	1442;"	d
DT_MIPS_DYNSTR_ALIGN	elfdef.h	1457;"	d
DT_MIPS_FLAGS	elfdef.h	1418;"	d
DT_MIPS_GOTSYM	elfdef.h	1428;"	d
DT_MIPS_GP_VALUE	elfdef.h	1464;"	d
DT_MIPS_HIDDEN_GOTIDX	elfdef.h	1453;"	d
DT_MIPS_HIPAGENO	elfdef.h	1429;"	d
DT_MIPS_ICHECKSUM	elfdef.h	1416;"	d
DT_MIPS_INTERFACE	elfdef.h	1456;"	d
DT_MIPS_INTERFACE_SIZE	elfdef.h	1458;"	d
DT_MIPS_IVERSION	elfdef.h	1417;"	d
DT_MIPS_LIBLIST	elfdef.h	1422;"	d
DT_MIPS_LIBLISTNO	elfdef.h	1425;"	d
DT_MIPS_LOCALPAGE_GOTIDX	elfdef.h	1451;"	d
DT_MIPS_LOCAL_GOTIDX	elfdef.h	1452;"	d
DT_MIPS_LOCAL_GOTNO	elfdef.h	1423;"	d
DT_MIPS_MSYM	elfdef.h	1420;"	d
DT_MIPS_NUM	elfdef.h	1472;"	d
DT_MIPS_OPTIONS	elfdef.h	1455;"	d
DT_MIPS_PERF_SUFFIX	elfdef.h	1461;"	d
DT_MIPS_PIXIE_INIT	elfdef.h	1449;"	d
DT_MIPS_PLTGOT	elfdef.h	1467;"	d
DT_MIPS_PROTECTED_GOTIDX	elfdef.h	1454;"	d
DT_MIPS_RLD_MAP	elfdef.h	1430;"	d
DT_MIPS_RLD_TEXT_RESOLVE_ADDR	elfdef.h	1459;"	d
DT_MIPS_RLD_VERSION	elfdef.h	1414;"	d
DT_MIPS_RWPLT	elfdef.h	1471;"	d
DT_MIPS_SYMBOL_LIB	elfdef.h	1450;"	d
DT_MIPS_SYMTABNO	elfdef.h	1426;"	d
DT_MIPS_TIME_STAMP	elfdef.h	1415;"	d
DT_MIPS_UNREFEXTNO	elfdef.h	1427;"	d
DT_MOVEENT	elfdef.h	587;"	d
DT_MOVESZ	elfdef.h	588;"	d
DT_MOVETAB	elfdef.h	613;"	d
DT_NEEDED	elfdef.h	538;"	d
DT_NULL	elfdef.h	537;"	d
DT_NUM	elfdef.h	571;"	d
DT_PLTGOT	elfdef.h	540;"	d
DT_PLTPAD	elfdef.h	612;"	d
DT_PLTPADSZ	elfdef.h	586;"	d
DT_PLTREL	elfdef.h	557;"	d
DT_PLTRELSZ	elfdef.h	539;"	d
DT_POSFLAG_1	elfdef.h	590;"	d
DT_PPC64_GLINK	elfdef.h	2026;"	d
DT_PPC64_NUM	elfdef.h	2029;"	d
DT_PPC64_OPD	elfdef.h	2027;"	d
DT_PPC64_OPDSZ	elfdef.h	2028;"	d
DT_PPC_GOT	elfdef.h	1902;"	d
DT_PPC_NUM	elfdef.h	1903;"	d
DT_PREINIT_ARRAY	elfdef.h	569;"	d
DT_PREINIT_ARRAYSZ	elfdef.h	570;"	d
DT_PROCNUM	elfdef.h	576;"	d
DT_REL	elfdef.h	554;"	d
DT_RELA	elfdef.h	544;"	d
DT_RELACOUNT	elfdef.h	623;"	d
DT_RELAENT	elfdef.h	546;"	d
DT_RELASZ	elfdef.h	545;"	d
DT_RELCOUNT	elfdef.h	624;"	d
DT_RELENT	elfdef.h	556;"	d
DT_RELSZ	elfdef.h	555;"	d
DT_RPATH	elfdef.h	552;"	d
DT_RUNPATH	elfdef.h	566;"	d
DT_SONAME	elfdef.h	551;"	d
DT_SPARC_NUM	elfdef.h	1135;"	d
DT_SPARC_REGISTER	elfdef.h	1134;"	d
DT_STRSZ	elfdef.h	547;"	d
DT_STRTAB	elfdef.h	542;"	d
DT_SYMBOLIC	elfdef.h	553;"	d
DT_SYMENT	elfdef.h	548;"	d
DT_SYMINENT	elfdef.h	593;"	d
DT_SYMINFO	elfdef.h	614;"	d
DT_SYMINSZ	elfdef.h	592;"	d
DT_SYMTAB	elfdef.h	543;"	d
DT_TEXTREL	elfdef.h	559;"	d
DT_TLSDESC_GOT	elfdef.h	606;"	d
DT_TLSDESC_PLT	elfdef.h	605;"	d
DT_VALNUM	elfdef.h	596;"	d
DT_VALRNGHI	elfdef.h	594;"	d
DT_VALRNGLO	elfdef.h	581;"	d
DT_VALTAGIDX	elfdef.h	595;"	d
DT_VERDEF	elfdef.h	628;"	d
DT_VERDEFNUM	elfdef.h	630;"	d
DT_VERNEED	elfdef.h	631;"	d
DT_VERNEEDNUM	elfdef.h	633;"	d
DT_VERSIONTAGIDX	elfdef.h	634;"	d
DT_VERSIONTAGNUM	elfdef.h	635;"	d
DT_VERSYM	elfdef.h	621;"	d
EFA_PARISC_1_0	elfdef.h	1535;"	d
EFA_PARISC_1_1	elfdef.h	1536;"	d
EFA_PARISC_2_0	elfdef.h	1537;"	d
EF_ALPHA_32BIT	elfdef.h	1715;"	d
EF_ALPHA_CANRELAX	elfdef.h	1716;"	d
EF_ARM_ALIGN8	elfdef.h	2041;"	d
EF_ARM_APCS_26	elfdef.h	2038;"	d
EF_ARM_APCS_FLOAT	elfdef.h	2039;"	d
EF_ARM_BE8	elfdef.h	2057;"	d
EF_ARM_DYNSYMSUSESEGIDX	elfdef.h	2052;"	d
EF_ARM_EABIMASK	elfdef.h	2054;"	d
EF_ARM_EABI_UNKNOWN	elfdef.h	2061;"	d
EF_ARM_EABI_VER1	elfdef.h	2062;"	d
EF_ARM_EABI_VER2	elfdef.h	2063;"	d
EF_ARM_EABI_VER3	elfdef.h	2064;"	d
EF_ARM_EABI_VER4	elfdef.h	2065;"	d
EF_ARM_EABI_VER5	elfdef.h	2066;"	d
EF_ARM_EABI_VERSION	elfdef.h	2060;"	d
EF_ARM_HASENTRY	elfdef.h	2036;"	d
EF_ARM_INTERWORK	elfdef.h	2037;"	d
EF_ARM_LE8	elfdef.h	2058;"	d
EF_ARM_MAPSYMSFIRST	elfdef.h	2053;"	d
EF_ARM_MAVERICK_FLOAT	elfdef.h	2046;"	d
EF_ARM_NEW_ABI	elfdef.h	2042;"	d
EF_ARM_OLD_ABI	elfdef.h	2043;"	d
EF_ARM_PIC	elfdef.h	2040;"	d
EF_ARM_RELEXEC	elfdef.h	2035;"	d
EF_ARM_SOFT_FLOAT	elfdef.h	2044;"	d
EF_ARM_SYMSARESORTED	elfdef.h	2051;"	d
EF_ARM_VFP_FLOAT	elfdef.h	2045;"	d
EF_CPU32	elfdef.h	896;"	d
EF_IA_64_ABI64	elfdef.h	2156;"	d
EF_IA_64_ARCH	elfdef.h	2157;"	d
EF_IA_64_MASKOS	elfdef.h	2155;"	d
EF_MIPS_64BIT_WHIRL	elfdef.h	1156;"	d
EF_MIPS_ABI2	elfdef.h	1157;"	d
EF_MIPS_ABI_ON32	elfdef.h	1158;"	d
EF_MIPS_ARCH	elfdef.h	1159;"	d
EF_MIPS_ARCH_1	elfdef.h	1163;"	d
EF_MIPS_ARCH_2	elfdef.h	1164;"	d
EF_MIPS_ARCH_3	elfdef.h	1165;"	d
EF_MIPS_ARCH_32	elfdef.h	1168;"	d
EF_MIPS_ARCH_4	elfdef.h	1166;"	d
EF_MIPS_ARCH_5	elfdef.h	1167;"	d
EF_MIPS_ARCH_64	elfdef.h	1169;"	d
EF_MIPS_CPIC	elfdef.h	1154;"	d
EF_MIPS_NOREORDER	elfdef.h	1152;"	d
EF_MIPS_PIC	elfdef.h	1153;"	d
EF_MIPS_XGOT	elfdef.h	1155;"	d
EF_PARISC_ARCH	elfdef.h	1531;"	d
EF_PARISC_EXT	elfdef.h	1525;"	d
EF_PARISC_LAZYSWAP	elfdef.h	1530;"	d
EF_PARISC_LSB	elfdef.h	1526;"	d
EF_PARISC_NO_KABP	elfdef.h	1528;"	d
EF_PARISC_TRAPNIL	elfdef.h	1524;"	d
EF_PARISC_WIDE	elfdef.h	1527;"	d
EF_PPC_EMB	elfdef.h	1785;"	d
EF_PPC_RELOCATABLE	elfdef.h	1788;"	d
EF_PPC_RELOCATABLE_LIB	elfdef.h	1789;"	d
EF_S390_HIGH_GPRS	elfdef.h	2335;"	d
EF_SH1	elfdef.h	2269;"	d
EF_SH2	elfdef.h	2270;"	d
EF_SH2A	elfdef.h	2279;"	d
EF_SH2A_NOFPU	elfdef.h	2283;"	d
EF_SH2A_SH3E	elfdef.h	2288;"	d
EF_SH2A_SH3_NOFPU	elfdef.h	2286;"	d
EF_SH2A_SH4	elfdef.h	2287;"	d
EF_SH2A_SH4_NOFPU	elfdef.h	2285;"	d
EF_SH2E	elfdef.h	2277;"	d
EF_SH3	elfdef.h	2271;"	d
EF_SH3E	elfdef.h	2275;"	d
EF_SH3_DSP	elfdef.h	2273;"	d
EF_SH3_NOMMU	elfdef.h	2284;"	d
EF_SH4	elfdef.h	2276;"	d
EF_SH4A	elfdef.h	2278;"	d
EF_SH4AL_DSP	elfdef.h	2274;"	d
EF_SH4A_NOFPU	elfdef.h	2281;"	d
EF_SH4_NOFPU	elfdef.h	2280;"	d
EF_SH4_NOMMU_NOFPU	elfdef.h	2282;"	d
EF_SH_DSP	elfdef.h	2272;"	d
EF_SH_MACH_MASK	elfdef.h	2267;"	d
EF_SH_UNKNOWN	elfdef.h	2268;"	d
EF_SPARCV9_MM	elfdef.h	1020;"	d
EF_SPARCV9_PSO	elfdef.h	1022;"	d
EF_SPARCV9_RMO	elfdef.h	1023;"	d
EF_SPARCV9_TSO	elfdef.h	1021;"	d
EF_SPARC_32PLUS	elfdef.h	1026;"	d
EF_SPARC_EXT_MASK	elfdef.h	1025;"	d
EF_SPARC_HAL_R1	elfdef.h	1028;"	d
EF_SPARC_LEDATA	elfdef.h	1024;"	d
EF_SPARC_SUN_US1	elfdef.h	1027;"	d
EF_SPARC_SUN_US3	elfdef.h	1029;"	d
EI_ABIVERSION	elfdef.h	122;"	d
EI_CLASS	elfdef.h	90;"	d
EI_DATA	elfdef.h	96;"	d
EI_MAG0	elfdef.h	74;"	d
EI_MAG1	elfdef.h	77;"	d
EI_MAG2	elfdef.h	80;"	d
EI_MAG3	elfdef.h	83;"	d
EI_NIDENT	elfdef.h	50;"	d
EI_OSABI	elfdef.h	105;"	d
EI_PAD	elfdef.h	124;"	d
EI_VERSION	elfdef.h	102;"	d
ELF32_R_INFO	elfdef.h	439;"	d
ELF32_R_SYM	elfdef.h	437;"	d
ELF32_R_TYPE	elfdef.h	438;"	d
ELF32_ST_BIND	elfdef.h	367;"	d
ELF32_ST_INFO	elfdef.h	369;"	d
ELF32_ST_TYPE	elfdef.h	368;"	d
ELF32_ST_VISIBILITY	elfdef.h	409;"	d
ELFCLASS32	elfdef.h	92;"	d
ELFCLASS64	elfdef.h	93;"	d
ELFCLASSNONE	elfdef.h	91;"	d
ELFCLASSNUM	elfdef.h	94;"	d
ELFDATA2LSB	elfdef.h	98;"	d
ELFDATA2MSB	elfdef.h	99;"	d
ELFDATANONE	elfdef.h	97;"	d
ELFDATANUM	elfdef.h	100;"	d
ELFDEF_H	elfdef.h	22;"	d
ELFMAG	elfdef.h	87;"	d
ELFMAG0	elfdef.h	75;"	d
ELFMAG1	elfdef.h	78;"	d
ELFMAG2	elfdef.h	81;"	d
ELFMAG3	elfdef.h	84;"	d
ELFOSABI_AIX	elfdef.h	112;"	d
ELFOSABI_ARM	elfdef.h	119;"	d
ELFOSABI_ARM_AEABI	elfdef.h	118;"	d
ELFOSABI_FREEBSD	elfdef.h	114;"	d
ELFOSABI_HPUX	elfdef.h	108;"	d
ELFOSABI_IRIX	elfdef.h	113;"	d
ELFOSABI_LINUX	elfdef.h	110;"	d
ELFOSABI_MODESTO	elfdef.h	116;"	d
ELFOSABI_NETBSD	elfdef.h	109;"	d
ELFOSABI_NONE	elfdef.h	106;"	d
ELFOSABI_OPENBSD	elfdef.h	117;"	d
ELFOSABI_SOLARIS	elfdef.h	111;"	d
ELFOSABI_STANDALONE	elfdef.h	120;"	d
ELFOSABI_SYSV	elfdef.h	107;"	d
ELFOSABI_TRU64	elfdef.h	115;"	d
ELF_H	elf.h	2;"	d
ELF_NOTE_ABI	elfdef.h	868;"	d
ELF_NOTE_GNU	elfdef.h	850;"	d
ELF_NOTE_OS_FREEBSD	elfdef.h	875;"	d
ELF_NOTE_OS_GNU	elfdef.h	873;"	d
ELF_NOTE_OS_LINUX	elfdef.h	872;"	d
ELF_NOTE_OS_SOLARIS2	elfdef.h	874;"	d
ELF_NOTE_PAGESIZE_HINT	elfdef.h	856;"	d
ELF_NOTE_SOLARIS	elfdef.h	847;"	d
EM_386	elfdef.h	144;"	d
EM_68HC05	elfdef.h	195;"	d
EM_68HC08	elfdef.h	194;"	d
EM_68HC11	elfdef.h	193;"	d
EM_68HC12	elfdef.h	177;"	d
EM_68HC16	elfdef.h	192;"	d
EM_68K	elfdef.h	145;"	d
EM_860	elfdef.h	147;"	d
EM_88K	elfdef.h	146;"	d
EM_960	elfdef.h	155;"	d
EM_ALPHA	elfdef.h	224;"	d
EM_ARC	elfdef.h	169;"	d
EM_ARC_A5	elfdef.h	216;"	d
EM_ARM	elfdef.h	164;"	d
EM_AVR	elfdef.h	206;"	d
EM_COLDFIRE	elfdef.h	176;"	d
EM_CRIS	elfdef.h	199;"	d
EM_D10V	elfdef.h	208;"	d
EM_D30V	elfdef.h	209;"	d
EM_FAKE_ALPHA	elfdef.h	165;"	d
EM_FIREPATH	elfdef.h	201;"	d
EM_FR20	elfdef.h	161;"	d
EM_FR30	elfdef.h	207;"	d
EM_FX66	elfdef.h	189;"	d
EM_H8S	elfdef.h	172;"	d
EM_H8_300	elfdef.h	170;"	d
EM_H8_300H	elfdef.h	171;"	d
EM_H8_500	elfdef.h	173;"	d
EM_HUANY	elfdef.h	204;"	d
EM_IA_64	elfdef.h	174;"	d
EM_JAVELIN	elfdef.h	200;"	d
EM_M32	elfdef.h	142;"	d
EM_M32R	elfdef.h	211;"	d
EM_ME16	elfdef.h	183;"	d
EM_MIPS	elfdef.h	148;"	d
EM_MIPS_RS3_LE	elfdef.h	150;"	d
EM_MIPS_X	elfdef.h	175;"	d
EM_MMA	elfdef.h	178;"	d
EM_MMIX	elfdef.h	203;"	d
EM_MN10200	elfdef.h	213;"	d
EM_MN10300	elfdef.h	212;"	d
EM_NCPU	elfdef.h	180;"	d
EM_NDR1	elfdef.h	181;"	d
EM_NONE	elfdef.h	141;"	d
EM_NUM	elfdef.h	218;"	d
EM_OPENRISC	elfdef.h	215;"	d
EM_PARISC	elfdef.h	152;"	d
EM_PCP	elfdef.h	179;"	d
EM_PDSP	elfdef.h	187;"	d
EM_PJ	elfdef.h	214;"	d
EM_PPC	elfdef.h	156;"	d
EM_PPC64	elfdef.h	157;"	d
EM_PRISM	elfdef.h	205;"	d
EM_RCE	elfdef.h	163;"	d
EM_RH32	elfdef.h	162;"	d
EM_S370	elfdef.h	149;"	d
EM_S390	elfdef.h	158;"	d
EM_SH	elfdef.h	166;"	d
EM_SPARC	elfdef.h	143;"	d
EM_SPARC32PLUS	elfdef.h	154;"	d
EM_SPARCV9	elfdef.h	167;"	d
EM_ST100	elfdef.h	184;"	d
EM_ST19	elfdef.h	197;"	d
EM_ST7	elfdef.h	191;"	d
EM_ST9PLUS	elfdef.h	190;"	d
EM_STARCORE	elfdef.h	182;"	d
EM_SVX	elfdef.h	196;"	d
EM_TINYJ	elfdef.h	185;"	d
EM_TRICORE	elfdef.h	168;"	d
EM_V800	elfdef.h	160;"	d
EM_V850	elfdef.h	210;"	d
EM_VAX	elfdef.h	198;"	d
EM_VPP500	elfdef.h	153;"	d
EM_X86_64	elfdef.h	186;"	d
EM_XTENSA	elfdef.h	217;"	d
EM_ZSP	elfdef.h	202;"	d
ET_CORE	elfdef.h	132;"	d
ET_DYN	elfdef.h	131;"	d
ET_EXEC	elfdef.h	130;"	d
ET_HIOS	elfdef.h	135;"	d
ET_HIPROC	elfdef.h	137;"	d
ET_LOOS	elfdef.h	134;"	d
ET_LOPROC	elfdef.h	136;"	d
ET_NONE	elfdef.h	128;"	d
ET_NUM	elfdef.h	133;"	d
ET_REL	elfdef.h	129;"	d
EV_CURRENT	elfdef.h	229;"	d
EV_NONE	elfdef.h	228;"	d
EV_NUM	elfdef.h	230;"	d
E_MIPS_ARCH_1	elfdef.h	1173;"	d
E_MIPS_ARCH_2	elfdef.h	1174;"	d
E_MIPS_ARCH_3	elfdef.h	1175;"	d
E_MIPS_ARCH_32	elfdef.h	1178;"	d
E_MIPS_ARCH_4	elfdef.h	1176;"	d
E_MIPS_ARCH_5	elfdef.h	1177;"	d
E_MIPS_ARCH_64	elfdef.h	1179;"	d
Elf32_Addr	elfdef.h	/^typedef u32int Elf32_Addr;$/;"	t
Elf32_Conflict	elfdef.h	/^typedef Elf32_Addr Elf32_Conflict;$/;"	t
Elf32_Dyn	elfdef.h	/^} Elf32_Dyn;$/;"	t	typeref:struct:__anon8
Elf32_Ehdr	elfdef.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon1
Elf32_Half	elfdef.h	/^typedef u16int Elf32_Half;$/;"	t
Elf32_Lib	elfdef.h	/^} Elf32_Lib;$/;"	t	typeref:struct:__anon23
Elf32_Nhdr	elfdef.h	/^} Elf32_Nhdr;$/;"	t	typeref:struct:__anon16
Elf32_Off	elfdef.h	/^typedef u32int Elf32_Off;$/;"	t
Elf32_Phdr	elfdef.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon7
Elf32_RegInfo	elfdef.h	/^} Elf32_RegInfo;$/;"	t	typeref:struct:__anon20
Elf32_Rel	elfdef.h	/^} Elf32_Rel;$/;"	t	typeref:struct:__anon5
Elf32_Rela	elfdef.h	/^} Elf32_Rela;$/;"	t	typeref:struct:__anon6
Elf32_Section	elfdef.h	/^typedef u16int Elf32_Section;$/;"	t
Elf32_Shdr	elfdef.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon2
Elf32_Sword	elfdef.h	/^typedef	s32int  Elf32_Sword;$/;"	t
Elf32_Sym	elfdef.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anon3
Elf32_Syminfo	elfdef.h	/^} Elf32_Syminfo;$/;"	t	typeref:struct:__anon4
Elf32_Verdaux	elfdef.h	/^} Elf32_Verdaux;$/;"	t	typeref:struct:__anon11
Elf32_Verdef	elfdef.h	/^} Elf32_Verdef;$/;"	t	typeref:struct:__anon10
Elf32_Vernaux	elfdef.h	/^} Elf32_Vernaux;$/;"	t	typeref:struct:__anon13
Elf32_Verneed	elfdef.h	/^} Elf32_Verneed;$/;"	t	typeref:struct:__anon12
Elf32_Versym	elfdef.h	/^typedef Elf32_Half Elf32_Versym;$/;"	t
Elf32_Word	elfdef.h	/^typedef u32int Elf32_Word;$/;"	t
Elf32_auxv_t	elfdef.h	/^} Elf32_auxv_t;$/;"	t	typeref:struct:__anon14
Elf32_gptab	elfdef.h	/^} Elf32_gptab;$/;"	t	typeref:union:__anon17
Elf_Options	elfdef.h	/^} Elf_Options;$/;"	t	typeref:struct:__anon21
Elf_Options_Hw	elfdef.h	/^} Elf_Options_Hw;$/;"	t	typeref:struct:__anon22
GRP_COMDAT	elfdef.h	325;"	d
HEAP_MAGIC	kheap.h	7;"	d
HWCAP_SPARC_BLKINIT	elfdef.h	1145;"	d
HWCAP_SPARC_FLUSH	elfdef.h	1139;"	d
HWCAP_SPARC_MULDIV	elfdef.h	1142;"	d
HWCAP_SPARC_N2	elfdef.h	1146;"	d
HWCAP_SPARC_STBAR	elfdef.h	1140;"	d
HWCAP_SPARC_SWAP	elfdef.h	1141;"	d
HWCAP_SPARC_ULTRA3	elfdef.h	1144;"	d
HWCAP_SPARC_V9	elfdef.h	1143;"	d
IDX_FROM_BITS	paging.c	6;"	d	file:
INITRDFS_H	fs/initrdfs.h	2;"	d
INITRDFS_MAGIC	fs/initrdfs.h	7;"	d
IRQ0	isr.h	13;"	d
IRQ1	isr.h	14;"	d
IRQ10	isr.h	23;"	d
IRQ11	isr.h	24;"	d
IRQ12	isr.h	25;"	d
IRQ13	isr.h	26;"	d
IRQ14	isr.h	27;"	d
IRQ2	isr.h	15;"	d
IRQ3	isr.h	16;"	d
IRQ4	isr.h	17;"	d
IRQ5	isr.h	18;"	d
IRQ6	isr.h	19;"	d
IRQ7	isr.h	20;"	d
IRQ8	isr.h	21;"	d
IRQ9	isr.h	22;"	d
ISR_H	isr.h	2;"	d
KERNEL_STACK_SIZE	task.h	10;"	d
KERNEL_STACK_START	task.h	9;"	d
KHEAP_H	kheap.h	2;"	d
KHEAP_INIT_END	kheap.h	11;"	d
KHEAP_MAX_END	kheap.h	10;"	d
KHEAP_MAX_IDX	kheap.h	12;"	d
KHEAP_START	kheap.h	9;"	d
LITUSE_ALPHA_ADDR	elfdef.h	1771;"	d
LITUSE_ALPHA_BASE	elfdef.h	1772;"	d
LITUSE_ALPHA_BYTOFF	elfdef.h	1773;"	d
LITUSE_ALPHA_JSR	elfdef.h	1774;"	d
LITUSE_ALPHA_TLS_GD	elfdef.h	1775;"	d
LITUSE_ALPHA_TLS_LDM	elfdef.h	1776;"	d
LL_DELAY_LOAD	elfdef.h	1512;"	d
LL_DELTA	elfdef.h	1513;"	d
LL_EXACT_MATCH	elfdef.h	1508;"	d
LL_EXPORTS	elfdef.h	1511;"	d
LL_IGNORE_INT_VER	elfdef.h	1509;"	d
LL_NONE	elfdef.h	1507;"	d
LL_REQUIRE_MINOR	elfdef.h	1510;"	d
MAX	common.h	5;"	d
MAX_NAME_LEN	common.h	10;"	d
MAX_PATH_LEN	common.h	11;"	d
MAX_SYMBOLS	module.h	6;"	d
MBOOT_CHECKSUM	boot.s	/^MBOOT_CHECKSUM      equ -(MBOOT_HEADER_MAGIC + MBOOT_HEADER_FLAGS)$/;"	d
MBOOT_HEADER_FLAGS	boot.s	/^MBOOT_HEADER_FLAGS  equ (MBOOT_PAGE_ALIGN | MBOOT_MEM_INFO)$/;"	d
MBOOT_HEADER_MAGIC	boot.s	/^MBOOT_HEADER_MAGIC  equ 0x1BADB002 ; Multiboot Magic value$/;"	d
MBOOT_MEM_INFO	boot.s	/^MBOOT_MEM_INFO      equ 1<<1    ; Provide your kernel with memory info$/;"	d
MBOOT_PAGE_ALIGN	boot.s	/^MBOOT_PAGE_ALIGN    equ 1<<0    ; Load kernel and modules on a page boundary$/;"	d
MIN	common.h	4;"	d
MODULE_H	module.h	2;"	d
MOD_SOURCES	Makefile	/^MOD_SOURCES= testmod.o           \\$/;"	m
MULTIBOOT_H	multiboot.h	2;"	d
NT_386_IOPERM	elfdef.h	515;"	d
NT_386_TLS	elfdef.h	514;"	d
NT_ASRS	elfdef.h	502;"	d
NT_AUXV	elfdef.h	500;"	d
NT_FPREGSET	elfdef.h	495;"	d
NT_GNU_ABI_TAG	elfdef.h	867;"	d
NT_GNU_BUILD_ID	elfdef.h	887;"	d
NT_GNU_GOLD_VERSION	elfdef.h	890;"	d
NT_GNU_HWCAP	elfdef.h	883;"	d
NT_GWINDOWS	elfdef.h	501;"	d
NT_LWPSINFO	elfdef.h	508;"	d
NT_LWPSTATUS	elfdef.h	507;"	d
NT_PLATFORM	elfdef.h	499;"	d
NT_PPC_SPE	elfdef.h	512;"	d
NT_PPC_VMX	elfdef.h	511;"	d
NT_PPC_VSX	elfdef.h	513;"	d
NT_PRCRED	elfdef.h	505;"	d
NT_PRFPXREG	elfdef.h	509;"	d
NT_PRPSINFO	elfdef.h	496;"	d
NT_PRSTATUS	elfdef.h	494;"	d
NT_PRXFPREG	elfdef.h	510;"	d
NT_PRXREG	elfdef.h	497;"	d
NT_PSINFO	elfdef.h	504;"	d
NT_PSTATUS	elfdef.h	503;"	d
NT_TASKSTRUCT	elfdef.h	498;"	d
NT_UTSNAME	elfdef.h	506;"	d
NT_VERSION	elfdef.h	520;"	d
NT_X86_XSTATE	elfdef.h	516;"	d
N_SYSCALLS	syscall.c	8;"	d	file:
ODK_EXCEPTIONS	elfdef.h	1297;"	d
ODK_FILL	elfdef.h	1300;"	d
ODK_HWAND	elfdef.h	1302;"	d
ODK_HWOR	elfdef.h	1303;"	d
ODK_HWPATCH	elfdef.h	1299;"	d
ODK_NULL	elfdef.h	1295;"	d
ODK_PAD	elfdef.h	1298;"	d
ODK_REGINFO	elfdef.h	1296;"	d
ODK_TAGS	elfdef.h	1301;"	d
OEX_DISMISS	elfdef.h	1313;"	d
OEX_FPDBUG	elfdef.h	1311;"	d
OEX_FPU_DIV0	elfdef.h	1316;"	d
OEX_FPU_INEX	elfdef.h	1319;"	d
OEX_FPU_INVAL	elfdef.h	1315;"	d
OEX_FPU_MAX	elfdef.h	1308;"	d
OEX_FPU_MIN	elfdef.h	1307;"	d
OEX_FPU_OFLO	elfdef.h	1317;"	d
OEX_FPU_UFLO	elfdef.h	1318;"	d
OEX_PAGE0	elfdef.h	1309;"	d
OEX_PRECISEFP	elfdef.h	1312;"	d
OEX_SMM	elfdef.h	1310;"	d
OFF_FROM_BITS	paging.c	7;"	d	file:
OHWA0_R4KEOP_CHECKED	elfdef.h	1342;"	d
OHWA1_R4KEOP_CLEAN	elfdef.h	1343;"	d
OHW_R4KEOP	elfdef.h	1323;"	d
OHW_R5KCVTL	elfdef.h	1326;"	d
OHW_R5KEOP	elfdef.h	1325;"	d
OHW_R8KPFETCH	elfdef.h	1324;"	d
OPAD_POSTFIX	elfdef.h	1329;"	d
OPAD_PREFIX	elfdef.h	1328;"	d
OPAD_SYMBOL	elfdef.h	1330;"	d
ORDER_ARRAY_H	order_array.h	2;"	d
PAGING_H	paging.h	2;"	d
PANIC	common.h	7;"	d
PF_ARM_ABS	elfdef.h	2081;"	d
PF_ARM_PI	elfdef.h	2080;"	d
PF_ARM_SB	elfdef.h	2078;"	d
PF_HP_CODE	elfdef.h	1705;"	d
PF_HP_FAR_SHARED	elfdef.h	1703;"	d
PF_HP_LAZYSWAP	elfdef.h	1707;"	d
PF_HP_MODIFY	elfdef.h	1706;"	d
PF_HP_NEAR_SHARED	elfdef.h	1704;"	d
PF_HP_PAGE_SIZE	elfdef.h	1702;"	d
PF_HP_SBP	elfdef.h	1708;"	d
PF_IA_64_NORECOV	elfdef.h	2167;"	d
PF_MASKOS	elfdef.h	489;"	d
PF_MASKPROC	elfdef.h	490;"	d
PF_MIPS_LOCAL	elfdef.h	1410;"	d
PF_PARISC_SBP	elfdef.h	1700;"	d
PF_R	elfdef.h	488;"	d
PF_W	elfdef.h	487;"	d
PF_X	elfdef.h	486;"	d
PN_XNUM	elfdef.h	459;"	d
PROG_LDFLAGS	Makefile	/^PROG_LDFLAGS=-Tprog.ld $/;"	m
PROG_SOURCES	Makefile	/^PROG_SOURCES= prog\/init.o        \\$/;"	m
PT_ARM_EXIDX	elfdef.h	2084;"	d
PT_DYNAMIC	elfdef.h	465;"	d
PT_GNU_EH_FRAME	elfdef.h	473;"	d
PT_GNU_RELRO	elfdef.h	475;"	d
PT_GNU_STACK	elfdef.h	474;"	d
PT_HIOS	elfdef.h	480;"	d
PT_HIPROC	elfdef.h	482;"	d
PT_HISUNW	elfdef.h	479;"	d
PT_HP_CORE_COMM	elfdef.h	1683;"	d
PT_HP_CORE_KERNEL	elfdef.h	1682;"	d
PT_HP_CORE_LOADABLE	elfdef.h	1685;"	d
PT_HP_CORE_MMF	elfdef.h	1688;"	d
PT_HP_CORE_NONE	elfdef.h	1680;"	d
PT_HP_CORE_PROC	elfdef.h	1684;"	d
PT_HP_CORE_SHM	elfdef.h	1687;"	d
PT_HP_CORE_STACK	elfdef.h	1686;"	d
PT_HP_CORE_VERSION	elfdef.h	1681;"	d
PT_HP_FASTBIND	elfdef.h	1690;"	d
PT_HP_HSL_ANNOT	elfdef.h	1692;"	d
PT_HP_OPT_ANNOT	elfdef.h	1691;"	d
PT_HP_PARALLEL	elfdef.h	1689;"	d
PT_HP_STACK	elfdef.h	1693;"	d
PT_HP_TLS	elfdef.h	1679;"	d
PT_IA_64_ARCHEXT	elfdef.h	2160;"	d
PT_IA_64_HP_HSL_ANOT	elfdef.h	2163;"	d
PT_IA_64_HP_OPT_ANOT	elfdef.h	2162;"	d
PT_IA_64_HP_STACK	elfdef.h	2164;"	d
PT_IA_64_UNWIND	elfdef.h	2161;"	d
PT_INTERP	elfdef.h	466;"	d
PT_LOAD	elfdef.h	464;"	d
PT_LOOS	elfdef.h	472;"	d
PT_LOPROC	elfdef.h	481;"	d
PT_LOSUNW	elfdef.h	476;"	d
PT_MIPS_OPTIONS	elfdef.h	1406;"	d
PT_MIPS_REGINFO	elfdef.h	1404;"	d
PT_MIPS_RTPROC	elfdef.h	1405;"	d
PT_NOTE	elfdef.h	467;"	d
PT_NULL	elfdef.h	463;"	d
PT_NUM	elfdef.h	471;"	d
PT_PARISC_ARCHEXT	elfdef.h	1695;"	d
PT_PARISC_UNWIND	elfdef.h	1696;"	d
PT_PHDR	elfdef.h	469;"	d
PT_SHLIB	elfdef.h	468;"	d
PT_SUNWBSS	elfdef.h	477;"	d
PT_SUNWSTACK	elfdef.h	478;"	d
PT_TLS	elfdef.h	470;"	d
RHF_CORD	elfdef.h	1489;"	d
RHF_DEFAULT_DELAY_LOAD	elfdef.h	1486;"	d
RHF_DELTA_C_PLUS_PLUS	elfdef.h	1483;"	d
RHF_GUARANTEE_INIT	elfdef.h	1482;"	d
RHF_GUARANTEE_START_INIT	elfdef.h	1484;"	d
RHF_NONE	elfdef.h	1476;"	d
RHF_NOTPOT	elfdef.h	1478;"	d
RHF_NO_LIBRARY_REPLACEMENT	elfdef.h	1479;"	d
RHF_NO_MOVE	elfdef.h	1480;"	d
RHF_NO_UNRES_UNDEF	elfdef.h	1490;"	d
RHF_PIXIE	elfdef.h	1485;"	d
RHF_QUICKSTART	elfdef.h	1477;"	d
RHF_REQUICKSTART	elfdef.h	1487;"	d
RHF_REQUICKSTARTED	elfdef.h	1488;"	d
RHF_RLD_ORDER_SAFE	elfdef.h	1491;"	d
RHF_SGI_ONLY	elfdef.h	1481;"	d
R_386_16	elfdef.h	975;"	d
R_386_32	elfdef.h	952;"	d
R_386_32PLT	elfdef.h	962;"	d
R_386_8	elfdef.h	977;"	d
R_386_COPY	elfdef.h	956;"	d
R_386_GLOB_DAT	elfdef.h	957;"	d
R_386_GOT32	elfdef.h	954;"	d
R_386_GOTOFF	elfdef.h	960;"	d
R_386_GOTPC	elfdef.h	961;"	d
R_386_IRELATIVE	elfdef.h	1008;"	d
R_386_JMP_SLOT	elfdef.h	958;"	d
R_386_NONE	elfdef.h	951;"	d
R_386_NUM	elfdef.h	1010;"	d
R_386_PC16	elfdef.h	976;"	d
R_386_PC32	elfdef.h	953;"	d
R_386_PC8	elfdef.h	978;"	d
R_386_PLT32	elfdef.h	955;"	d
R_386_RELATIVE	elfdef.h	959;"	d
R_386_TLS_DESC	elfdef.h	1004;"	d
R_386_TLS_DESC_CALL	elfdef.h	1001;"	d
R_386_TLS_DTPMOD32	elfdef.h	996;"	d
R_386_TLS_DTPOFF32	elfdef.h	997;"	d
R_386_TLS_GD	elfdef.h	970;"	d
R_386_TLS_GD_32	elfdef.h	979;"	d
R_386_TLS_GD_CALL	elfdef.h	982;"	d
R_386_TLS_GD_POP	elfdef.h	984;"	d
R_386_TLS_GD_PUSH	elfdef.h	981;"	d
R_386_TLS_GOTDESC	elfdef.h	1000;"	d
R_386_TLS_GOTIE	elfdef.h	966;"	d
R_386_TLS_IE	elfdef.h	964;"	d
R_386_TLS_IE_32	elfdef.h	992;"	d
R_386_TLS_LDM	elfdef.h	972;"	d
R_386_TLS_LDM_32	elfdef.h	985;"	d
R_386_TLS_LDM_CALL	elfdef.h	988;"	d
R_386_TLS_LDM_POP	elfdef.h	990;"	d
R_386_TLS_LDM_PUSH	elfdef.h	987;"	d
R_386_TLS_LDO_32	elfdef.h	991;"	d
R_386_TLS_LE	elfdef.h	968;"	d
R_386_TLS_LE_32	elfdef.h	994;"	d
R_386_TLS_TPOFF	elfdef.h	963;"	d
R_386_TLS_TPOFF32	elfdef.h	998;"	d
R_390_12	elfdef.h	2341;"	d
R_390_16	elfdef.h	2342;"	d
R_390_20	elfdef.h	2413;"	d
R_390_32	elfdef.h	2343;"	d
R_390_64	elfdef.h	2361;"	d
R_390_8	elfdef.h	2340;"	d
R_390_COPY	elfdef.h	2348;"	d
R_390_GLOB_DAT	elfdef.h	2349;"	d
R_390_GOT12	elfdef.h	2345;"	d
R_390_GOT16	elfdef.h	2354;"	d
R_390_GOT20	elfdef.h	2414;"	d
R_390_GOT32	elfdef.h	2346;"	d
R_390_GOT64	elfdef.h	2363;"	d
R_390_GOTENT	elfdef.h	2365;"	d
R_390_GOTOFF16	elfdef.h	2366;"	d
R_390_GOTOFF32	elfdef.h	2352;"	d
R_390_GOTOFF64	elfdef.h	2367;"	d
R_390_GOTPC	elfdef.h	2353;"	d
R_390_GOTPCDBL	elfdef.h	2360;"	d
R_390_GOTPLT12	elfdef.h	2368;"	d
R_390_GOTPLT16	elfdef.h	2369;"	d
R_390_GOTPLT20	elfdef.h	2415;"	d
R_390_GOTPLT32	elfdef.h	2370;"	d
R_390_GOTPLT64	elfdef.h	2371;"	d
R_390_GOTPLTENT	elfdef.h	2372;"	d
R_390_JMP_SLOT	elfdef.h	2350;"	d
R_390_NONE	elfdef.h	2339;"	d
R_390_NUM	elfdef.h	2419;"	d
R_390_PC16	elfdef.h	2355;"	d
R_390_PC16DBL	elfdef.h	2356;"	d
R_390_PC32	elfdef.h	2344;"	d
R_390_PC32DBL	elfdef.h	2358;"	d
R_390_PC64	elfdef.h	2362;"	d
R_390_PLT16DBL	elfdef.h	2357;"	d
R_390_PLT32	elfdef.h	2347;"	d
R_390_PLT32DBL	elfdef.h	2359;"	d
R_390_PLT64	elfdef.h	2364;"	d
R_390_PLTOFF16	elfdef.h	2373;"	d
R_390_PLTOFF32	elfdef.h	2374;"	d
R_390_PLTOFF64	elfdef.h	2375;"	d
R_390_RELATIVE	elfdef.h	2351;"	d
R_390_TLS_DTPMOD	elfdef.h	2409;"	d
R_390_TLS_DTPOFF	elfdef.h	2410;"	d
R_390_TLS_GD32	elfdef.h	2381;"	d
R_390_TLS_GD64	elfdef.h	2383;"	d
R_390_TLS_GDCALL	elfdef.h	2377;"	d
R_390_TLS_GOTIE12	elfdef.h	2385;"	d
R_390_TLS_GOTIE20	elfdef.h	2416;"	d
R_390_TLS_GOTIE32	elfdef.h	2387;"	d
R_390_TLS_GOTIE64	elfdef.h	2389;"	d
R_390_TLS_IE32	elfdef.h	2395;"	d
R_390_TLS_IE64	elfdef.h	2397;"	d
R_390_TLS_IEENT	elfdef.h	2399;"	d
R_390_TLS_LDCALL	elfdef.h	2379;"	d
R_390_TLS_LDM32	elfdef.h	2391;"	d
R_390_TLS_LDM64	elfdef.h	2393;"	d
R_390_TLS_LDO32	elfdef.h	2405;"	d
R_390_TLS_LDO64	elfdef.h	2407;"	d
R_390_TLS_LE32	elfdef.h	2401;"	d
R_390_TLS_LE64	elfdef.h	2403;"	d
R_390_TLS_LOAD	elfdef.h	2376;"	d
R_390_TLS_TPOFF	elfdef.h	2411;"	d
R_68K_16	elfdef.h	902;"	d
R_68K_32	elfdef.h	901;"	d
R_68K_8	elfdef.h	903;"	d
R_68K_COPY	elfdef.h	919;"	d
R_68K_GLOB_DAT	elfdef.h	920;"	d
R_68K_GOT16	elfdef.h	908;"	d
R_68K_GOT16O	elfdef.h	911;"	d
R_68K_GOT32	elfdef.h	907;"	d
R_68K_GOT32O	elfdef.h	910;"	d
R_68K_GOT8	elfdef.h	909;"	d
R_68K_GOT8O	elfdef.h	912;"	d
R_68K_JMP_SLOT	elfdef.h	921;"	d
R_68K_NONE	elfdef.h	900;"	d
R_68K_NUM	elfdef.h	945;"	d
R_68K_PC16	elfdef.h	905;"	d
R_68K_PC32	elfdef.h	904;"	d
R_68K_PC8	elfdef.h	906;"	d
R_68K_PLT16	elfdef.h	914;"	d
R_68K_PLT16O	elfdef.h	917;"	d
R_68K_PLT32	elfdef.h	913;"	d
R_68K_PLT32O	elfdef.h	916;"	d
R_68K_PLT8	elfdef.h	915;"	d
R_68K_PLT8O	elfdef.h	918;"	d
R_68K_RELATIVE	elfdef.h	922;"	d
R_68K_TLS_DTPMOD32	elfdef.h	941;"	d
R_68K_TLS_DTPREL32	elfdef.h	942;"	d
R_68K_TLS_GD16	elfdef.h	924;"	d
R_68K_TLS_GD32	elfdef.h	923;"	d
R_68K_TLS_GD8	elfdef.h	925;"	d
R_68K_TLS_IE16	elfdef.h	933;"	d
R_68K_TLS_IE32	elfdef.h	932;"	d
R_68K_TLS_IE8	elfdef.h	934;"	d
R_68K_TLS_LDM16	elfdef.h	927;"	d
R_68K_TLS_LDM32	elfdef.h	926;"	d
R_68K_TLS_LDM8	elfdef.h	928;"	d
R_68K_TLS_LDO16	elfdef.h	930;"	d
R_68K_TLS_LDO32	elfdef.h	929;"	d
R_68K_TLS_LDO8	elfdef.h	931;"	d
R_68K_TLS_LE16	elfdef.h	937;"	d
R_68K_TLS_LE32	elfdef.h	935;"	d
R_68K_TLS_LE8	elfdef.h	939;"	d
R_68K_TLS_TPREL32	elfdef.h	943;"	d
R_ALPHA_BRADDR	elfdef.h	1741;"	d
R_ALPHA_COPY	elfdef.h	1749;"	d
R_ALPHA_DTPMOD64	elfdef.h	1756;"	d
R_ALPHA_DTPREL16	elfdef.h	1761;"	d
R_ALPHA_DTPREL64	elfdef.h	1758;"	d
R_ALPHA_DTPRELHI	elfdef.h	1759;"	d
R_ALPHA_DTPRELLO	elfdef.h	1760;"	d
R_ALPHA_GLOB_DAT	elfdef.h	1750;"	d
R_ALPHA_GOTDTPREL	elfdef.h	1757;"	d
R_ALPHA_GOTTPREL	elfdef.h	1762;"	d
R_ALPHA_GPDISP	elfdef.h	1740;"	d
R_ALPHA_GPREL16	elfdef.h	1748;"	d
R_ALPHA_GPREL32	elfdef.h	1737;"	d
R_ALPHA_GPRELHIGH	elfdef.h	1746;"	d
R_ALPHA_GPRELLOW	elfdef.h	1747;"	d
R_ALPHA_HINT	elfdef.h	1742;"	d
R_ALPHA_JMP_SLOT	elfdef.h	1751;"	d
R_ALPHA_LITERAL	elfdef.h	1738;"	d
R_ALPHA_LITUSE	elfdef.h	1739;"	d
R_ALPHA_NONE	elfdef.h	1734;"	d
R_ALPHA_NUM	elfdef.h	1768;"	d
R_ALPHA_REFLONG	elfdef.h	1735;"	d
R_ALPHA_REFQUAD	elfdef.h	1736;"	d
R_ALPHA_RELATIVE	elfdef.h	1752;"	d
R_ALPHA_SREL16	elfdef.h	1743;"	d
R_ALPHA_SREL32	elfdef.h	1744;"	d
R_ALPHA_SREL64	elfdef.h	1745;"	d
R_ALPHA_TLSGD	elfdef.h	1754;"	d
R_ALPHA_TLS_GD_HI	elfdef.h	1753;"	d
R_ALPHA_TLS_LDM	elfdef.h	1755;"	d
R_ALPHA_TPREL16	elfdef.h	1766;"	d
R_ALPHA_TPREL64	elfdef.h	1763;"	d
R_ALPHA_TPRELHI	elfdef.h	1764;"	d
R_ALPHA_TPRELLO	elfdef.h	1765;"	d
R_ARM_ABS12	elfdef.h	2100;"	d
R_ARM_ABS16	elfdef.h	2099;"	d
R_ARM_ABS32	elfdef.h	2096;"	d
R_ARM_ABS8	elfdef.h	2102;"	d
R_ARM_ALU_PCREL_15_8	elfdef.h	2123;"	d
R_ARM_ALU_PCREL_23_15	elfdef.h	2124;"	d
R_ARM_ALU_PCREL_7_0	elfdef.h	2122;"	d
R_ARM_ALU_SBREL_19_12	elfdef.h	2126;"	d
R_ARM_ALU_SBREL_27_20	elfdef.h	2127;"	d
R_ARM_AMP_VCALL9	elfdef.h	2106;"	d
R_ARM_COPY	elfdef.h	2114;"	d
R_ARM_GLOB_DAT	elfdef.h	2115;"	d
R_ARM_GNU_VTENTRY	elfdef.h	2128;"	d
R_ARM_GNU_VTINHERIT	elfdef.h	2129;"	d
R_ARM_GOT32	elfdef.h	2120;"	d
R_ARM_GOTOFF	elfdef.h	2118;"	d
R_ARM_GOTPC	elfdef.h	2119;"	d
R_ARM_JUMP_SLOT	elfdef.h	2116;"	d
R_ARM_LDR_SBREL_11_0	elfdef.h	2125;"	d
R_ARM_NONE	elfdef.h	2094;"	d
R_ARM_NUM	elfdef.h	2150;"	d
R_ARM_PC13	elfdef.h	2098;"	d
R_ARM_PC24	elfdef.h	2095;"	d
R_ARM_PLT32	elfdef.h	2121;"	d
R_ARM_RABS22	elfdef.h	2146;"	d
R_ARM_RBASE	elfdef.h	2148;"	d
R_ARM_REL32	elfdef.h	2097;"	d
R_ARM_RELATIVE	elfdef.h	2117;"	d
R_ARM_RPC24	elfdef.h	2147;"	d
R_ARM_RREL32	elfdef.h	2145;"	d
R_ARM_RSBREL32	elfdef.h	2143;"	d
R_ARM_RXPC25	elfdef.h	2142;"	d
R_ARM_SBREL32	elfdef.h	2103;"	d
R_ARM_SWI24	elfdef.h	2107;"	d
R_ARM_THM_ABS5	elfdef.h	2101;"	d
R_ARM_THM_PC11	elfdef.h	2130;"	d
R_ARM_THM_PC22	elfdef.h	2104;"	d
R_ARM_THM_PC8	elfdef.h	2105;"	d
R_ARM_THM_PC9	elfdef.h	2131;"	d
R_ARM_THM_RPC22	elfdef.h	2144;"	d
R_ARM_THM_SWI8	elfdef.h	2108;"	d
R_ARM_THM_XPC22	elfdef.h	2110;"	d
R_ARM_TLS_DTPMOD32	elfdef.h	2111;"	d
R_ARM_TLS_DTPOFF32	elfdef.h	2112;"	d
R_ARM_TLS_GD32	elfdef.h	2132;"	d
R_ARM_TLS_IE32	elfdef.h	2138;"	d
R_ARM_TLS_LDM32	elfdef.h	2134;"	d
R_ARM_TLS_LDO32	elfdef.h	2136;"	d
R_ARM_TLS_LE32	elfdef.h	2140;"	d
R_ARM_TLS_TPOFF32	elfdef.h	2113;"	d
R_ARM_XPC25	elfdef.h	2109;"	d
R_CRIS_16	elfdef.h	2425;"	d
R_CRIS_16_GOT	elfdef.h	2436;"	d
R_CRIS_16_GOTPLT	elfdef.h	2438;"	d
R_CRIS_16_PCREL	elfdef.h	2428;"	d
R_CRIS_32	elfdef.h	2426;"	d
R_CRIS_32_GOT	elfdef.h	2437;"	d
R_CRIS_32_GOTPLT	elfdef.h	2439;"	d
R_CRIS_32_GOTREL	elfdef.h	2440;"	d
R_CRIS_32_PCREL	elfdef.h	2429;"	d
R_CRIS_32_PLT_GOTREL	elfdef.h	2441;"	d
R_CRIS_32_PLT_PCREL	elfdef.h	2442;"	d
R_CRIS_8	elfdef.h	2424;"	d
R_CRIS_8_PCREL	elfdef.h	2427;"	d
R_CRIS_COPY	elfdef.h	2432;"	d
R_CRIS_GLOB_DAT	elfdef.h	2433;"	d
R_CRIS_GNU_VTENTRY	elfdef.h	2431;"	d
R_CRIS_GNU_VTINHERIT	elfdef.h	2430;"	d
R_CRIS_JUMP_SLOT	elfdef.h	2434;"	d
R_CRIS_NONE	elfdef.h	2423;"	d
R_CRIS_NUM	elfdef.h	2444;"	d
R_CRIS_RELATIVE	elfdef.h	2435;"	d
R_IA64_COPY	elfdef.h	2242;"	d
R_IA64_DIR32LSB	elfdef.h	2187;"	d
R_IA64_DIR32MSB	elfdef.h	2186;"	d
R_IA64_DIR64LSB	elfdef.h	2189;"	d
R_IA64_DIR64MSB	elfdef.h	2188;"	d
R_IA64_DTPMOD64LSB	elfdef.h	2253;"	d
R_IA64_DTPMOD64MSB	elfdef.h	2252;"	d
R_IA64_DTPREL14	elfdef.h	2255;"	d
R_IA64_DTPREL22	elfdef.h	2256;"	d
R_IA64_DTPREL32LSB	elfdef.h	2259;"	d
R_IA64_DTPREL32MSB	elfdef.h	2258;"	d
R_IA64_DTPREL64I	elfdef.h	2257;"	d
R_IA64_DTPREL64LSB	elfdef.h	2261;"	d
R_IA64_DTPREL64MSB	elfdef.h	2260;"	d
R_IA64_FPTR32LSB	elfdef.h	2204;"	d
R_IA64_FPTR32MSB	elfdef.h	2203;"	d
R_IA64_FPTR64I	elfdef.h	2202;"	d
R_IA64_FPTR64LSB	elfdef.h	2206;"	d
R_IA64_FPTR64MSB	elfdef.h	2205;"	d
R_IA64_GPREL22	elfdef.h	2190;"	d
R_IA64_GPREL32LSB	elfdef.h	2193;"	d
R_IA64_GPREL32MSB	elfdef.h	2192;"	d
R_IA64_GPREL64I	elfdef.h	2191;"	d
R_IA64_GPREL64LSB	elfdef.h	2195;"	d
R_IA64_GPREL64MSB	elfdef.h	2194;"	d
R_IA64_IMM14	elfdef.h	2183;"	d
R_IA64_IMM22	elfdef.h	2184;"	d
R_IA64_IMM64	elfdef.h	2185;"	d
R_IA64_IPLTLSB	elfdef.h	2241;"	d
R_IA64_IPLTMSB	elfdef.h	2240;"	d
R_IA64_LDXMOV	elfdef.h	2245;"	d
R_IA64_LTOFF22	elfdef.h	2196;"	d
R_IA64_LTOFF22X	elfdef.h	2244;"	d
R_IA64_LTOFF64I	elfdef.h	2197;"	d
R_IA64_LTOFF_DTPMOD22	elfdef.h	2254;"	d
R_IA64_LTOFF_DTPREL22	elfdef.h	2262;"	d
R_IA64_LTOFF_FPTR22	elfdef.h	2215;"	d
R_IA64_LTOFF_FPTR32LSB	elfdef.h	2218;"	d
R_IA64_LTOFF_FPTR32MSB	elfdef.h	2217;"	d
R_IA64_LTOFF_FPTR64I	elfdef.h	2216;"	d
R_IA64_LTOFF_FPTR64LSB	elfdef.h	2220;"	d
R_IA64_LTOFF_FPTR64MSB	elfdef.h	2219;"	d
R_IA64_LTOFF_TPREL22	elfdef.h	2251;"	d
R_IA64_LTV32LSB	elfdef.h	2234;"	d
R_IA64_LTV32MSB	elfdef.h	2233;"	d
R_IA64_LTV64LSB	elfdef.h	2236;"	d
R_IA64_LTV64MSB	elfdef.h	2235;"	d
R_IA64_NONE	elfdef.h	2182;"	d
R_IA64_PCREL21B	elfdef.h	2208;"	d
R_IA64_PCREL21BI	elfdef.h	2237;"	d
R_IA64_PCREL21F	elfdef.h	2210;"	d
R_IA64_PCREL21M	elfdef.h	2209;"	d
R_IA64_PCREL22	elfdef.h	2238;"	d
R_IA64_PCREL32LSB	elfdef.h	2212;"	d
R_IA64_PCREL32MSB	elfdef.h	2211;"	d
R_IA64_PCREL60B	elfdef.h	2207;"	d
R_IA64_PCREL64I	elfdef.h	2239;"	d
R_IA64_PCREL64LSB	elfdef.h	2214;"	d
R_IA64_PCREL64MSB	elfdef.h	2213;"	d
R_IA64_PLTOFF22	elfdef.h	2198;"	d
R_IA64_PLTOFF64I	elfdef.h	2199;"	d
R_IA64_PLTOFF64LSB	elfdef.h	2201;"	d
R_IA64_PLTOFF64MSB	elfdef.h	2200;"	d
R_IA64_REL32LSB	elfdef.h	2230;"	d
R_IA64_REL32MSB	elfdef.h	2229;"	d
R_IA64_REL64LSB	elfdef.h	2232;"	d
R_IA64_REL64MSB	elfdef.h	2231;"	d
R_IA64_SECREL32LSB	elfdef.h	2226;"	d
R_IA64_SECREL32MSB	elfdef.h	2225;"	d
R_IA64_SECREL64LSB	elfdef.h	2228;"	d
R_IA64_SECREL64MSB	elfdef.h	2227;"	d
R_IA64_SEGREL32LSB	elfdef.h	2222;"	d
R_IA64_SEGREL32MSB	elfdef.h	2221;"	d
R_IA64_SEGREL64LSB	elfdef.h	2224;"	d
R_IA64_SEGREL64MSB	elfdef.h	2223;"	d
R_IA64_SUB	elfdef.h	2243;"	d
R_IA64_TPREL14	elfdef.h	2246;"	d
R_IA64_TPREL22	elfdef.h	2247;"	d
R_IA64_TPREL64I	elfdef.h	2248;"	d
R_IA64_TPREL64LSB	elfdef.h	2250;"	d
R_IA64_TPREL64MSB	elfdef.h	2249;"	d
R_M32R_10_PCREL	elfdef.h	2532;"	d
R_M32R_10_PCREL_RELA	elfdef.h	2545;"	d
R_M32R_16	elfdef.h	2529;"	d
R_M32R_16_RELA	elfdef.h	2542;"	d
R_M32R_18_PCREL	elfdef.h	2533;"	d
R_M32R_18_PCREL_RELA	elfdef.h	2546;"	d
R_M32R_24	elfdef.h	2531;"	d
R_M32R_24_RELA	elfdef.h	2544;"	d
R_M32R_26_PCREL	elfdef.h	2534;"	d
R_M32R_26_PCREL_RELA	elfdef.h	2547;"	d
R_M32R_26_PLTREL	elfdef.h	2557;"	d
R_M32R_32	elfdef.h	2530;"	d
R_M32R_32_RELA	elfdef.h	2543;"	d
R_M32R_COPY	elfdef.h	2558;"	d
R_M32R_GLOB_DAT	elfdef.h	2559;"	d
R_M32R_GNU_VTENTRY	elfdef.h	2540;"	d
R_M32R_GNU_VTINHERIT	elfdef.h	2539;"	d
R_M32R_GOT16_HI_SLO	elfdef.h	2566;"	d
R_M32R_GOT16_HI_ULO	elfdef.h	2564;"	d
R_M32R_GOT16_LO	elfdef.h	2568;"	d
R_M32R_GOT24	elfdef.h	2556;"	d
R_M32R_GOTOFF	elfdef.h	2562;"	d
R_M32R_GOTOFF_HI_SLO	elfdef.h	2577;"	d
R_M32R_GOTOFF_HI_ULO	elfdef.h	2575;"	d
R_M32R_GOTOFF_LO	elfdef.h	2579;"	d
R_M32R_GOTPC24	elfdef.h	2563;"	d
R_M32R_GOTPC_HI_SLO	elfdef.h	2571;"	d
R_M32R_GOTPC_HI_ULO	elfdef.h	2569;"	d
R_M32R_GOTPC_LO	elfdef.h	2573;"	d
R_M32R_HI16_SLO	elfdef.h	2536;"	d
R_M32R_HI16_SLO_RELA	elfdef.h	2549;"	d
R_M32R_HI16_ULO	elfdef.h	2535;"	d
R_M32R_HI16_ULO_RELA	elfdef.h	2548;"	d
R_M32R_JMP_SLOT	elfdef.h	2560;"	d
R_M32R_LO16	elfdef.h	2537;"	d
R_M32R_LO16_RELA	elfdef.h	2550;"	d
R_M32R_NONE	elfdef.h	2528;"	d
R_M32R_NUM	elfdef.h	2580;"	d
R_M32R_REL32	elfdef.h	2554;"	d
R_M32R_RELATIVE	elfdef.h	2561;"	d
R_M32R_RELA_GNU_VTENTRY	elfdef.h	2553;"	d
R_M32R_RELA_GNU_VTINHERIT	elfdef.h	2552;"	d
R_M32R_SDA16	elfdef.h	2538;"	d
R_M32R_SDA16_RELA	elfdef.h	2551;"	d
R_MIPS_16	elfdef.h	1348;"	d
R_MIPS_26	elfdef.h	1351;"	d
R_MIPS_32	elfdef.h	1349;"	d
R_MIPS_64	elfdef.h	1363;"	d
R_MIPS_ADD_IMMEDIATE	elfdef.h	1379;"	d
R_MIPS_CALL16	elfdef.h	1358;"	d
R_MIPS_CALL_HI16	elfdef.h	1375;"	d
R_MIPS_CALL_LO16	elfdef.h	1376;"	d
R_MIPS_COPY	elfdef.h	1397;"	d
R_MIPS_DELETE	elfdef.h	1372;"	d
R_MIPS_GLOB_DAT	elfdef.h	1396;"	d
R_MIPS_GOT16	elfdef.h	1356;"	d
R_MIPS_GOT_DISP	elfdef.h	1364;"	d
R_MIPS_GOT_HI16	elfdef.h	1367;"	d
R_MIPS_GOT_LO16	elfdef.h	1368;"	d
R_MIPS_GOT_OFST	elfdef.h	1366;"	d
R_MIPS_GOT_PAGE	elfdef.h	1365;"	d
R_MIPS_GPREL16	elfdef.h	1354;"	d
R_MIPS_GPREL32	elfdef.h	1359;"	d
R_MIPS_HI16	elfdef.h	1352;"	d
R_MIPS_HIGHER	elfdef.h	1373;"	d
R_MIPS_HIGHEST	elfdef.h	1374;"	d
R_MIPS_INSERT_A	elfdef.h	1370;"	d
R_MIPS_INSERT_B	elfdef.h	1371;"	d
R_MIPS_JALR	elfdef.h	1382;"	d
R_MIPS_JUMP_SLOT	elfdef.h	1398;"	d
R_MIPS_LITERAL	elfdef.h	1355;"	d
R_MIPS_LO16	elfdef.h	1353;"	d
R_MIPS_NONE	elfdef.h	1347;"	d
R_MIPS_NUM	elfdef.h	1400;"	d
R_MIPS_PC16	elfdef.h	1357;"	d
R_MIPS_PJUMP	elfdef.h	1380;"	d
R_MIPS_REL16	elfdef.h	1378;"	d
R_MIPS_REL32	elfdef.h	1350;"	d
R_MIPS_RELGOT	elfdef.h	1381;"	d
R_MIPS_SCN_DISP	elfdef.h	1377;"	d
R_MIPS_SHIFT5	elfdef.h	1361;"	d
R_MIPS_SHIFT6	elfdef.h	1362;"	d
R_MIPS_SUB	elfdef.h	1369;"	d
R_MIPS_TLS_DTPMOD32	elfdef.h	1383;"	d
R_MIPS_TLS_DTPMOD64	elfdef.h	1385;"	d
R_MIPS_TLS_DTPREL32	elfdef.h	1384;"	d
R_MIPS_TLS_DTPREL64	elfdef.h	1386;"	d
R_MIPS_TLS_DTPREL_HI16	elfdef.h	1389;"	d
R_MIPS_TLS_DTPREL_LO16	elfdef.h	1390;"	d
R_MIPS_TLS_GD	elfdef.h	1387;"	d
R_MIPS_TLS_GOTTPREL	elfdef.h	1391;"	d
R_MIPS_TLS_LDM	elfdef.h	1388;"	d
R_MIPS_TLS_TPREL32	elfdef.h	1392;"	d
R_MIPS_TLS_TPREL64	elfdef.h	1393;"	d
R_MIPS_TLS_TPREL_HI16	elfdef.h	1394;"	d
R_MIPS_TLS_TPREL_LO16	elfdef.h	1395;"	d
R_MN10300_16	elfdef.h	2501;"	d
R_MN10300_24	elfdef.h	2508;"	d
R_MN10300_32	elfdef.h	2500;"	d
R_MN10300_8	elfdef.h	2502;"	d
R_MN10300_COPY	elfdef.h	2519;"	d
R_MN10300_GLOB_DAT	elfdef.h	2520;"	d
R_MN10300_GNU_VTENTRY	elfdef.h	2507;"	d
R_MN10300_GNU_VTINHERIT	elfdef.h	2506;"	d
R_MN10300_GOT16	elfdef.h	2518;"	d
R_MN10300_GOT24	elfdef.h	2517;"	d
R_MN10300_GOT32	elfdef.h	2516;"	d
R_MN10300_GOTOFF16	elfdef.h	2513;"	d
R_MN10300_GOTOFF24	elfdef.h	2512;"	d
R_MN10300_GOTOFF32	elfdef.h	2511;"	d
R_MN10300_GOTPC16	elfdef.h	2510;"	d
R_MN10300_GOTPC32	elfdef.h	2509;"	d
R_MN10300_JMP_SLOT	elfdef.h	2521;"	d
R_MN10300_NONE	elfdef.h	2499;"	d
R_MN10300_NUM	elfdef.h	2524;"	d
R_MN10300_PCREL16	elfdef.h	2504;"	d
R_MN10300_PCREL32	elfdef.h	2503;"	d
R_MN10300_PCREL8	elfdef.h	2505;"	d
R_MN10300_PLT16	elfdef.h	2515;"	d
R_MN10300_PLT32	elfdef.h	2514;"	d
R_MN10300_RELATIVE	elfdef.h	2522;"	d
R_PARISC_COPY	elfdef.h	1634;"	d
R_PARISC_DIR14DR	elfdef.h	1604;"	d
R_PARISC_DIR14R	elfdef.h	1571;"	d
R_PARISC_DIR14WR	elfdef.h	1603;"	d
R_PARISC_DIR16DF	elfdef.h	1607;"	d
R_PARISC_DIR16F	elfdef.h	1605;"	d
R_PARISC_DIR16WF	elfdef.h	1606;"	d
R_PARISC_DIR17F	elfdef.h	1570;"	d
R_PARISC_DIR17R	elfdef.h	1569;"	d
R_PARISC_DIR21L	elfdef.h	1568;"	d
R_PARISC_DIR32	elfdef.h	1567;"	d
R_PARISC_DIR64	elfdef.h	1602;"	d
R_PARISC_DPREL14R	elfdef.h	1578;"	d
R_PARISC_DPREL21L	elfdef.h	1577;"	d
R_PARISC_EPLT	elfdef.h	1636;"	d
R_PARISC_FPTR64	elfdef.h	1591;"	d
R_PARISC_GNU_VTENTRY	elfdef.h	1655;"	d
R_PARISC_GNU_VTINHERIT	elfdef.h	1656;"	d
R_PARISC_GPREL14DR	elfdef.h	1610;"	d
R_PARISC_GPREL14R	elfdef.h	1580;"	d
R_PARISC_GPREL14WR	elfdef.h	1609;"	d
R_PARISC_GPREL16DF	elfdef.h	1613;"	d
R_PARISC_GPREL16F	elfdef.h	1611;"	d
R_PARISC_GPREL16WF	elfdef.h	1612;"	d
R_PARISC_GPREL21L	elfdef.h	1579;"	d
R_PARISC_GPREL64	elfdef.h	1608;"	d
R_PARISC_HIRESERVE	elfdef.h	1675;"	d
R_PARISC_IPLT	elfdef.h	1635;"	d
R_PARISC_LORESERVE	elfdef.h	1633;"	d
R_PARISC_LTOFF14DR	elfdef.h	1616;"	d
R_PARISC_LTOFF14R	elfdef.h	1582;"	d
R_PARISC_LTOFF14WR	elfdef.h	1615;"	d
R_PARISC_LTOFF16DF	elfdef.h	1619;"	d
R_PARISC_LTOFF16F	elfdef.h	1617;"	d
R_PARISC_LTOFF16WF	elfdef.h	1618;"	d
R_PARISC_LTOFF21L	elfdef.h	1581;"	d
R_PARISC_LTOFF64	elfdef.h	1614;"	d
R_PARISC_LTOFF_FPTR14DR	elfdef.h	1629;"	d
R_PARISC_LTOFF_FPTR14R	elfdef.h	1590;"	d
R_PARISC_LTOFF_FPTR14WR	elfdef.h	1628;"	d
R_PARISC_LTOFF_FPTR16DF	elfdef.h	1632;"	d
R_PARISC_LTOFF_FPTR16F	elfdef.h	1630;"	d
R_PARISC_LTOFF_FPTR16WF	elfdef.h	1631;"	d
R_PARISC_LTOFF_FPTR21L	elfdef.h	1589;"	d
R_PARISC_LTOFF_FPTR32	elfdef.h	1588;"	d
R_PARISC_LTOFF_FPTR64	elfdef.h	1627;"	d
R_PARISC_LTOFF_TP14DR	elfdef.h	1651;"	d
R_PARISC_LTOFF_TP14F	elfdef.h	1642;"	d
R_PARISC_LTOFF_TP14R	elfdef.h	1641;"	d
R_PARISC_LTOFF_TP14WR	elfdef.h	1650;"	d
R_PARISC_LTOFF_TP16DF	elfdef.h	1654;"	d
R_PARISC_LTOFF_TP16F	elfdef.h	1652;"	d
R_PARISC_LTOFF_TP16WF	elfdef.h	1653;"	d
R_PARISC_LTOFF_TP21L	elfdef.h	1640;"	d
R_PARISC_LTOFF_TP64	elfdef.h	1649;"	d
R_PARISC_NONE	elfdef.h	1566;"	d
R_PARISC_PCREL14DR	elfdef.h	1598;"	d
R_PARISC_PCREL14R	elfdef.h	1576;"	d
R_PARISC_PCREL14WR	elfdef.h	1597;"	d
R_PARISC_PCREL16DF	elfdef.h	1601;"	d
R_PARISC_PCREL16F	elfdef.h	1599;"	d
R_PARISC_PCREL16WF	elfdef.h	1600;"	d
R_PARISC_PCREL17F	elfdef.h	1575;"	d
R_PARISC_PCREL17R	elfdef.h	1574;"	d
R_PARISC_PCREL21L	elfdef.h	1573;"	d
R_PARISC_PCREL22F	elfdef.h	1596;"	d
R_PARISC_PCREL32	elfdef.h	1572;"	d
R_PARISC_PCREL64	elfdef.h	1595;"	d
R_PARISC_PLABEL14R	elfdef.h	1594;"	d
R_PARISC_PLABEL21L	elfdef.h	1593;"	d
R_PARISC_PLABEL32	elfdef.h	1592;"	d
R_PARISC_PLTOFF14DR	elfdef.h	1623;"	d
R_PARISC_PLTOFF14R	elfdef.h	1587;"	d
R_PARISC_PLTOFF14WR	elfdef.h	1622;"	d
R_PARISC_PLTOFF16DF	elfdef.h	1626;"	d
R_PARISC_PLTOFF16F	elfdef.h	1624;"	d
R_PARISC_PLTOFF16WF	elfdef.h	1625;"	d
R_PARISC_PLTOFF21L	elfdef.h	1586;"	d
R_PARISC_SECREL32	elfdef.h	1583;"	d
R_PARISC_SECREL64	elfdef.h	1620;"	d
R_PARISC_SEGBASE	elfdef.h	1584;"	d
R_PARISC_SEGREL32	elfdef.h	1585;"	d
R_PARISC_SEGREL64	elfdef.h	1621;"	d
R_PARISC_TLS_DTPMOD32	elfdef.h	1665;"	d
R_PARISC_TLS_DTPMOD64	elfdef.h	1666;"	d
R_PARISC_TLS_DTPOFF32	elfdef.h	1667;"	d
R_PARISC_TLS_DTPOFF64	elfdef.h	1668;"	d
R_PARISC_TLS_GD14R	elfdef.h	1658;"	d
R_PARISC_TLS_GD21L	elfdef.h	1657;"	d
R_PARISC_TLS_GDCALL	elfdef.h	1659;"	d
R_PARISC_TLS_IE14R	elfdef.h	1672;"	d
R_PARISC_TLS_IE21L	elfdef.h	1671;"	d
R_PARISC_TLS_LDM14R	elfdef.h	1661;"	d
R_PARISC_TLS_LDM21L	elfdef.h	1660;"	d
R_PARISC_TLS_LDMCALL	elfdef.h	1662;"	d
R_PARISC_TLS_LDO14R	elfdef.h	1664;"	d
R_PARISC_TLS_LDO21L	elfdef.h	1663;"	d
R_PARISC_TLS_LE14R	elfdef.h	1670;"	d
R_PARISC_TLS_LE21L	elfdef.h	1669;"	d
R_PARISC_TLS_TPREL32	elfdef.h	1673;"	d
R_PARISC_TLS_TPREL64	elfdef.h	1674;"	d
R_PARISC_TPREL14DR	elfdef.h	1645;"	d
R_PARISC_TPREL14R	elfdef.h	1639;"	d
R_PARISC_TPREL14WR	elfdef.h	1644;"	d
R_PARISC_TPREL16DF	elfdef.h	1648;"	d
R_PARISC_TPREL16F	elfdef.h	1646;"	d
R_PARISC_TPREL16WF	elfdef.h	1647;"	d
R_PARISC_TPREL21L	elfdef.h	1638;"	d
R_PARISC_TPREL32	elfdef.h	1637;"	d
R_PARISC_TPREL64	elfdef.h	1643;"	d
R_PPC64_ADDR14	elfdef.h	1913;"	d
R_PPC64_ADDR14_BRNTAKEN	elfdef.h	1915;"	d
R_PPC64_ADDR14_BRTAKEN	elfdef.h	1914;"	d
R_PPC64_ADDR16	elfdef.h	1909;"	d
R_PPC64_ADDR16_DS	elfdef.h	1963;"	d
R_PPC64_ADDR16_HA	elfdef.h	1912;"	d
R_PPC64_ADDR16_HI	elfdef.h	1911;"	d
R_PPC64_ADDR16_HIGHER	elfdef.h	1945;"	d
R_PPC64_ADDR16_HIGHERA	elfdef.h	1946;"	d
R_PPC64_ADDR16_HIGHEST	elfdef.h	1947;"	d
R_PPC64_ADDR16_HIGHESTA	elfdef.h	1948;"	d
R_PPC64_ADDR16_LO	elfdef.h	1910;"	d
R_PPC64_ADDR16_LO_DS	elfdef.h	1964;"	d
R_PPC64_ADDR24	elfdef.h	1908;"	d
R_PPC64_ADDR30	elfdef.h	1943;"	d
R_PPC64_ADDR32	elfdef.h	1907;"	d
R_PPC64_ADDR64	elfdef.h	1944;"	d
R_PPC64_COPY	elfdef.h	1925;"	d
R_PPC64_DTPMOD64	elfdef.h	1977;"	d
R_PPC64_DTPREL16	elfdef.h	1983;"	d
R_PPC64_DTPREL16_DS	elfdef.h	2010;"	d
R_PPC64_DTPREL16_HA	elfdef.h	1986;"	d
R_PPC64_DTPREL16_HI	elfdef.h	1985;"	d
R_PPC64_DTPREL16_HIGHER	elfdef.h	2012;"	d
R_PPC64_DTPREL16_HIGHERA	elfdef.h	2013;"	d
R_PPC64_DTPREL16_HIGHEST	elfdef.h	2014;"	d
R_PPC64_DTPREL16_HIGHESTA	elfdef.h	2015;"	d
R_PPC64_DTPREL16_LO	elfdef.h	1984;"	d
R_PPC64_DTPREL16_LO_DS	elfdef.h	2011;"	d
R_PPC64_DTPREL64	elfdef.h	1987;"	d
R_PPC64_GLOB_DAT	elfdef.h	1926;"	d
R_PPC64_GOT16	elfdef.h	1920;"	d
R_PPC64_GOT16_DS	elfdef.h	1965;"	d
R_PPC64_GOT16_HA	elfdef.h	1923;"	d
R_PPC64_GOT16_HI	elfdef.h	1922;"	d
R_PPC64_GOT16_LO	elfdef.h	1921;"	d
R_PPC64_GOT16_LO_DS	elfdef.h	1966;"	d
R_PPC64_GOT_DTPREL16_DS	elfdef.h	2000;"	d
R_PPC64_GOT_DTPREL16_HA	elfdef.h	2003;"	d
R_PPC64_GOT_DTPREL16_HI	elfdef.h	2002;"	d
R_PPC64_GOT_DTPREL16_LO_DS	elfdef.h	2001;"	d
R_PPC64_GOT_TLSGD16	elfdef.h	1988;"	d
R_PPC64_GOT_TLSGD16_HA	elfdef.h	1991;"	d
R_PPC64_GOT_TLSGD16_HI	elfdef.h	1990;"	d
R_PPC64_GOT_TLSGD16_LO	elfdef.h	1989;"	d
R_PPC64_GOT_TLSLD16	elfdef.h	1992;"	d
R_PPC64_GOT_TLSLD16_HA	elfdef.h	1995;"	d
R_PPC64_GOT_TLSLD16_HI	elfdef.h	1994;"	d
R_PPC64_GOT_TLSLD16_LO	elfdef.h	1993;"	d
R_PPC64_GOT_TPREL16_DS	elfdef.h	1996;"	d
R_PPC64_GOT_TPREL16_HA	elfdef.h	1999;"	d
R_PPC64_GOT_TPREL16_HI	elfdef.h	1998;"	d
R_PPC64_GOT_TPREL16_LO_DS	elfdef.h	1997;"	d
R_PPC64_IRELATIVE	elfdef.h	2019;"	d
R_PPC64_JMP_IREL	elfdef.h	2018;"	d
R_PPC64_JMP_SLOT	elfdef.h	1927;"	d
R_PPC64_NONE	elfdef.h	1906;"	d
R_PPC64_PLT16_HA	elfdef.h	1937;"	d
R_PPC64_PLT16_HI	elfdef.h	1936;"	d
R_PPC64_PLT16_LO	elfdef.h	1935;"	d
R_PPC64_PLT16_LO_DS	elfdef.h	1967;"	d
R_PPC64_PLT32	elfdef.h	1933;"	d
R_PPC64_PLT64	elfdef.h	1951;"	d
R_PPC64_PLTGOT16	elfdef.h	1958;"	d
R_PPC64_PLTGOT16_DS	elfdef.h	1972;"	d
R_PPC64_PLTGOT16_HA	elfdef.h	1961;"	d
R_PPC64_PLTGOT16_HI	elfdef.h	1960;"	d
R_PPC64_PLTGOT16_LO	elfdef.h	1959;"	d
R_PPC64_PLTGOT16_LO_DS	elfdef.h	1973;"	d
R_PPC64_PLTREL32	elfdef.h	1934;"	d
R_PPC64_PLTREL64	elfdef.h	1952;"	d
R_PPC64_REL14	elfdef.h	1917;"	d
R_PPC64_REL14_BRNTAKEN	elfdef.h	1919;"	d
R_PPC64_REL14_BRTAKEN	elfdef.h	1918;"	d
R_PPC64_REL16	elfdef.h	2020;"	d
R_PPC64_REL16_HA	elfdef.h	2023;"	d
R_PPC64_REL16_HI	elfdef.h	2022;"	d
R_PPC64_REL16_LO	elfdef.h	2021;"	d
R_PPC64_REL24	elfdef.h	1916;"	d
R_PPC64_REL32	elfdef.h	1932;"	d
R_PPC64_REL64	elfdef.h	1950;"	d
R_PPC64_RELATIVE	elfdef.h	1928;"	d
R_PPC64_SECTOFF	elfdef.h	1939;"	d
R_PPC64_SECTOFF_DS	elfdef.h	1968;"	d
R_PPC64_SECTOFF_HA	elfdef.h	1942;"	d
R_PPC64_SECTOFF_HI	elfdef.h	1941;"	d
R_PPC64_SECTOFF_LO	elfdef.h	1940;"	d
R_PPC64_SECTOFF_LO_DS	elfdef.h	1969;"	d
R_PPC64_TLS	elfdef.h	1976;"	d
R_PPC64_TOC	elfdef.h	1957;"	d
R_PPC64_TOC16	elfdef.h	1953;"	d
R_PPC64_TOC16_DS	elfdef.h	1970;"	d
R_PPC64_TOC16_HA	elfdef.h	1956;"	d
R_PPC64_TOC16_HI	elfdef.h	1955;"	d
R_PPC64_TOC16_LO	elfdef.h	1954;"	d
R_PPC64_TOC16_LO_DS	elfdef.h	1971;"	d
R_PPC64_TPREL16	elfdef.h	1978;"	d
R_PPC64_TPREL16_DS	elfdef.h	2004;"	d
R_PPC64_TPREL16_HA	elfdef.h	1981;"	d
R_PPC64_TPREL16_HI	elfdef.h	1980;"	d
R_PPC64_TPREL16_HIGHER	elfdef.h	2006;"	d
R_PPC64_TPREL16_HIGHERA	elfdef.h	2007;"	d
R_PPC64_TPREL16_HIGHEST	elfdef.h	2008;"	d
R_PPC64_TPREL16_HIGHESTA	elfdef.h	2009;"	d
R_PPC64_TPREL16_LO	elfdef.h	1979;"	d
R_PPC64_TPREL16_LO_DS	elfdef.h	2005;"	d
R_PPC64_TPREL64	elfdef.h	1982;"	d
R_PPC64_UADDR16	elfdef.h	1931;"	d
R_PPC64_UADDR32	elfdef.h	1930;"	d
R_PPC64_UADDR64	elfdef.h	1949;"	d
R_PPC_ADDR14	elfdef.h	1800;"	d
R_PPC_ADDR14_BRNTAKEN	elfdef.h	1802;"	d
R_PPC_ADDR14_BRTAKEN	elfdef.h	1801;"	d
R_PPC_ADDR16	elfdef.h	1796;"	d
R_PPC_ADDR16_HA	elfdef.h	1799;"	d
R_PPC_ADDR16_HI	elfdef.h	1798;"	d
R_PPC_ADDR16_LO	elfdef.h	1797;"	d
R_PPC_ADDR24	elfdef.h	1795;"	d
R_PPC_ADDR32	elfdef.h	1794;"	d
R_PPC_COPY	elfdef.h	1812;"	d
R_PPC_DIAB_RELSDA_HA	elfdef.h	1886;"	d
R_PPC_DIAB_RELSDA_HI	elfdef.h	1885;"	d
R_PPC_DIAB_RELSDA_LO	elfdef.h	1884;"	d
R_PPC_DIAB_SDA21_HA	elfdef.h	1883;"	d
R_PPC_DIAB_SDA21_HI	elfdef.h	1882;"	d
R_PPC_DIAB_SDA21_LO	elfdef.h	1881;"	d
R_PPC_DTPMOD32	elfdef.h	1833;"	d
R_PPC_DTPREL16	elfdef.h	1839;"	d
R_PPC_DTPREL16_HA	elfdef.h	1842;"	d
R_PPC_DTPREL16_HI	elfdef.h	1841;"	d
R_PPC_DTPREL16_LO	elfdef.h	1840;"	d
R_PPC_DTPREL32	elfdef.h	1843;"	d
R_PPC_EMB_BIT_FLD	elfdef.h	1877;"	d
R_PPC_EMB_MRKREF	elfdef.h	1872;"	d
R_PPC_EMB_NADDR16	elfdef.h	1864;"	d
R_PPC_EMB_NADDR16_HA	elfdef.h	1867;"	d
R_PPC_EMB_NADDR16_HI	elfdef.h	1866;"	d
R_PPC_EMB_NADDR16_LO	elfdef.h	1865;"	d
R_PPC_EMB_NADDR32	elfdef.h	1863;"	d
R_PPC_EMB_RELSDA	elfdef.h	1878;"	d
R_PPC_EMB_RELSEC16	elfdef.h	1873;"	d
R_PPC_EMB_RELST_HA	elfdef.h	1876;"	d
R_PPC_EMB_RELST_HI	elfdef.h	1875;"	d
R_PPC_EMB_RELST_LO	elfdef.h	1874;"	d
R_PPC_EMB_SDA21	elfdef.h	1871;"	d
R_PPC_EMB_SDA2I16	elfdef.h	1869;"	d
R_PPC_EMB_SDA2REL	elfdef.h	1870;"	d
R_PPC_EMB_SDAI16	elfdef.h	1868;"	d
R_PPC_GLOB_DAT	elfdef.h	1813;"	d
R_PPC_GOT16	elfdef.h	1807;"	d
R_PPC_GOT16_HA	elfdef.h	1810;"	d
R_PPC_GOT16_HI	elfdef.h	1809;"	d
R_PPC_GOT16_LO	elfdef.h	1808;"	d
R_PPC_GOT_DTPREL16	elfdef.h	1856;"	d
R_PPC_GOT_DTPREL16_HA	elfdef.h	1859;"	d
R_PPC_GOT_DTPREL16_HI	elfdef.h	1858;"	d
R_PPC_GOT_DTPREL16_LO	elfdef.h	1857;"	d
R_PPC_GOT_TLSGD16	elfdef.h	1844;"	d
R_PPC_GOT_TLSGD16_HA	elfdef.h	1847;"	d
R_PPC_GOT_TLSGD16_HI	elfdef.h	1846;"	d
R_PPC_GOT_TLSGD16_LO	elfdef.h	1845;"	d
R_PPC_GOT_TLSLD16	elfdef.h	1848;"	d
R_PPC_GOT_TLSLD16_HA	elfdef.h	1851;"	d
R_PPC_GOT_TLSLD16_HI	elfdef.h	1850;"	d
R_PPC_GOT_TLSLD16_LO	elfdef.h	1849;"	d
R_PPC_GOT_TPREL16	elfdef.h	1852;"	d
R_PPC_GOT_TPREL16_HA	elfdef.h	1855;"	d
R_PPC_GOT_TPREL16_HI	elfdef.h	1854;"	d
R_PPC_GOT_TPREL16_LO	elfdef.h	1853;"	d
R_PPC_IRELATIVE	elfdef.h	1889;"	d
R_PPC_JMP_SLOT	elfdef.h	1814;"	d
R_PPC_LOCAL24PC	elfdef.h	1816;"	d
R_PPC_NONE	elfdef.h	1793;"	d
R_PPC_PLT16_HA	elfdef.h	1824;"	d
R_PPC_PLT16_HI	elfdef.h	1823;"	d
R_PPC_PLT16_LO	elfdef.h	1822;"	d
R_PPC_PLT32	elfdef.h	1820;"	d
R_PPC_PLTREL24	elfdef.h	1811;"	d
R_PPC_PLTREL32	elfdef.h	1821;"	d
R_PPC_REL14	elfdef.h	1804;"	d
R_PPC_REL14_BRNTAKEN	elfdef.h	1806;"	d
R_PPC_REL14_BRTAKEN	elfdef.h	1805;"	d
R_PPC_REL16	elfdef.h	1892;"	d
R_PPC_REL16_HA	elfdef.h	1895;"	d
R_PPC_REL16_HI	elfdef.h	1894;"	d
R_PPC_REL16_LO	elfdef.h	1893;"	d
R_PPC_REL24	elfdef.h	1803;"	d
R_PPC_REL32	elfdef.h	1819;"	d
R_PPC_RELATIVE	elfdef.h	1815;"	d
R_PPC_SDAREL16	elfdef.h	1825;"	d
R_PPC_SECTOFF	elfdef.h	1826;"	d
R_PPC_SECTOFF_HA	elfdef.h	1829;"	d
R_PPC_SECTOFF_HI	elfdef.h	1828;"	d
R_PPC_SECTOFF_LO	elfdef.h	1827;"	d
R_PPC_TLS	elfdef.h	1832;"	d
R_PPC_TOC16	elfdef.h	1899;"	d
R_PPC_TPREL16	elfdef.h	1834;"	d
R_PPC_TPREL16_HA	elfdef.h	1837;"	d
R_PPC_TPREL16_HI	elfdef.h	1836;"	d
R_PPC_TPREL16_LO	elfdef.h	1835;"	d
R_PPC_TPREL32	elfdef.h	1838;"	d
R_PPC_UADDR16	elfdef.h	1818;"	d
R_PPC_UADDR32	elfdef.h	1817;"	d
R_SH_ALIGN	elfdef.h	2305;"	d
R_SH_CODE	elfdef.h	2306;"	d
R_SH_COPY	elfdef.h	2322;"	d
R_SH_COUNT	elfdef.h	2304;"	d
R_SH_DATA	elfdef.h	2307;"	d
R_SH_DIR32	elfdef.h	2292;"	d
R_SH_DIR8BP	elfdef.h	2298;"	d
R_SH_DIR8L	elfdef.h	2300;"	d
R_SH_DIR8W	elfdef.h	2299;"	d
R_SH_DIR8WPL	elfdef.h	2296;"	d
R_SH_DIR8WPN	elfdef.h	2294;"	d
R_SH_DIR8WPZ	elfdef.h	2297;"	d
R_SH_GLOB_DAT	elfdef.h	2323;"	d
R_SH_GNU_VTENTRY	elfdef.h	2311;"	d
R_SH_GNU_VTINHERIT	elfdef.h	2310;"	d
R_SH_GOT32	elfdef.h	2320;"	d
R_SH_GOTOFF	elfdef.h	2326;"	d
R_SH_GOTPC	elfdef.h	2327;"	d
R_SH_IND12W	elfdef.h	2295;"	d
R_SH_JMP_SLOT	elfdef.h	2324;"	d
R_SH_LABEL	elfdef.h	2308;"	d
R_SH_NONE	elfdef.h	2291;"	d
R_SH_NUM	elfdef.h	2329;"	d
R_SH_PLT32	elfdef.h	2321;"	d
R_SH_REL32	elfdef.h	2293;"	d
R_SH_RELATIVE	elfdef.h	2325;"	d
R_SH_SWITCH16	elfdef.h	2301;"	d
R_SH_SWITCH32	elfdef.h	2302;"	d
R_SH_SWITCH8	elfdef.h	2309;"	d
R_SH_TLS_DTPMOD32	elfdef.h	2317;"	d
R_SH_TLS_DTPOFF32	elfdef.h	2318;"	d
R_SH_TLS_GD_32	elfdef.h	2312;"	d
R_SH_TLS_IE_32	elfdef.h	2315;"	d
R_SH_TLS_LDO_32	elfdef.h	2314;"	d
R_SH_TLS_LD_32	elfdef.h	2313;"	d
R_SH_TLS_LE_32	elfdef.h	2316;"	d
R_SH_TLS_TPOFF32	elfdef.h	2319;"	d
R_SH_USES	elfdef.h	2303;"	d
R_SPARC_10	elfdef.h	1066;"	d
R_SPARC_11	elfdef.h	1067;"	d
R_SPARC_13	elfdef.h	1044;"	d
R_SPARC_16	elfdef.h	1035;"	d
R_SPARC_22	elfdef.h	1043;"	d
R_SPARC_32	elfdef.h	1036;"	d
R_SPARC_5	elfdef.h	1080;"	d
R_SPARC_6	elfdef.h	1081;"	d
R_SPARC_64	elfdef.h	1068;"	d
R_SPARC_7	elfdef.h	1079;"	d
R_SPARC_8	elfdef.h	1034;"	d
R_SPARC_COPY	elfdef.h	1052;"	d
R_SPARC_DISP16	elfdef.h	1038;"	d
R_SPARC_DISP32	elfdef.h	1039;"	d
R_SPARC_DISP64	elfdef.h	1082;"	d
R_SPARC_DISP8	elfdef.h	1037;"	d
R_SPARC_GLOB_DAT	elfdef.h	1053;"	d
R_SPARC_GLOB_JMP	elfdef.h	1078;"	d
R_SPARC_GNU_VTENTRY	elfdef.h	1127;"	d
R_SPARC_GNU_VTINHERIT	elfdef.h	1126;"	d
R_SPARC_GOT10	elfdef.h	1046;"	d
R_SPARC_GOT13	elfdef.h	1047;"	d
R_SPARC_GOT22	elfdef.h	1048;"	d
R_SPARC_GOTDATA_HIX22	elfdef.h	1116;"	d
R_SPARC_GOTDATA_LOX10	elfdef.h	1117;"	d
R_SPARC_GOTDATA_OP	elfdef.h	1120;"	d
R_SPARC_GOTDATA_OP_HIX22	elfdef.h	1118;"	d
R_SPARC_GOTDATA_OP_LOX10	elfdef.h	1119;"	d
R_SPARC_H34	elfdef.h	1121;"	d
R_SPARC_H44	elfdef.h	1086;"	d
R_SPARC_HH22	elfdef.h	1070;"	d
R_SPARC_HI22	elfdef.h	1042;"	d
R_SPARC_HIPLT22	elfdef.h	1061;"	d
R_SPARC_HIX22	elfdef.h	1084;"	d
R_SPARC_HM10	elfdef.h	1071;"	d
R_SPARC_IRELATIVE	elfdef.h	1125;"	d
R_SPARC_JMP_IREL	elfdef.h	1124;"	d
R_SPARC_JMP_SLOT	elfdef.h	1054;"	d
R_SPARC_L44	elfdef.h	1088;"	d
R_SPARC_LM22	elfdef.h	1072;"	d
R_SPARC_LO10	elfdef.h	1045;"	d
R_SPARC_LOPLT10	elfdef.h	1062;"	d
R_SPARC_LOX10	elfdef.h	1085;"	d
R_SPARC_M44	elfdef.h	1087;"	d
R_SPARC_NONE	elfdef.h	1033;"	d
R_SPARC_NUM	elfdef.h	1130;"	d
R_SPARC_OLO10	elfdef.h	1069;"	d
R_SPARC_PC10	elfdef.h	1049;"	d
R_SPARC_PC22	elfdef.h	1050;"	d
R_SPARC_PCPLT10	elfdef.h	1065;"	d
R_SPARC_PCPLT22	elfdef.h	1064;"	d
R_SPARC_PCPLT32	elfdef.h	1063;"	d
R_SPARC_PC_HH22	elfdef.h	1073;"	d
R_SPARC_PC_HM10	elfdef.h	1074;"	d
R_SPARC_PC_LM22	elfdef.h	1075;"	d
R_SPARC_PLT32	elfdef.h	1060;"	d
R_SPARC_PLT64	elfdef.h	1083;"	d
R_SPARC_REGISTER	elfdef.h	1089;"	d
R_SPARC_RELATIVE	elfdef.h	1055;"	d
R_SPARC_REV32	elfdef.h	1128;"	d
R_SPARC_SIZE32	elfdef.h	1122;"	d
R_SPARC_SIZE64	elfdef.h	1123;"	d
R_SPARC_TLS_DTPMOD32	elfdef.h	1110;"	d
R_SPARC_TLS_DTPMOD64	elfdef.h	1111;"	d
R_SPARC_TLS_DTPOFF32	elfdef.h	1112;"	d
R_SPARC_TLS_DTPOFF64	elfdef.h	1113;"	d
R_SPARC_TLS_GD_ADD	elfdef.h	1094;"	d
R_SPARC_TLS_GD_CALL	elfdef.h	1095;"	d
R_SPARC_TLS_GD_HI22	elfdef.h	1092;"	d
R_SPARC_TLS_GD_LO10	elfdef.h	1093;"	d
R_SPARC_TLS_IE_ADD	elfdef.h	1107;"	d
R_SPARC_TLS_IE_HI22	elfdef.h	1103;"	d
R_SPARC_TLS_IE_LD	elfdef.h	1105;"	d
R_SPARC_TLS_IE_LDX	elfdef.h	1106;"	d
R_SPARC_TLS_IE_LO10	elfdef.h	1104;"	d
R_SPARC_TLS_LDM_ADD	elfdef.h	1098;"	d
R_SPARC_TLS_LDM_CALL	elfdef.h	1099;"	d
R_SPARC_TLS_LDM_HI22	elfdef.h	1096;"	d
R_SPARC_TLS_LDM_LO10	elfdef.h	1097;"	d
R_SPARC_TLS_LDO_ADD	elfdef.h	1102;"	d
R_SPARC_TLS_LDO_HIX22	elfdef.h	1100;"	d
R_SPARC_TLS_LDO_LOX10	elfdef.h	1101;"	d
R_SPARC_TLS_LE_HIX22	elfdef.h	1108;"	d
R_SPARC_TLS_LE_LOX10	elfdef.h	1109;"	d
R_SPARC_TLS_TPOFF32	elfdef.h	1114;"	d
R_SPARC_TLS_TPOFF64	elfdef.h	1115;"	d
R_SPARC_UA16	elfdef.h	1091;"	d
R_SPARC_UA32	elfdef.h	1056;"	d
R_SPARC_UA64	elfdef.h	1090;"	d
R_SPARC_WDISP16	elfdef.h	1076;"	d
R_SPARC_WDISP19	elfdef.h	1077;"	d
R_SPARC_WDISP22	elfdef.h	1041;"	d
R_SPARC_WDISP30	elfdef.h	1040;"	d
R_SPARC_WPLT30	elfdef.h	1051;"	d
R_X86_64_16	elfdef.h	2461;"	d
R_X86_64_32	elfdef.h	2459;"	d
R_X86_64_32S	elfdef.h	2460;"	d
R_X86_64_64	elfdef.h	2449;"	d
R_X86_64_8	elfdef.h	2463;"	d
R_X86_64_COPY	elfdef.h	2453;"	d
R_X86_64_DTPMOD64	elfdef.h	2465;"	d
R_X86_64_DTPOFF32	elfdef.h	2472;"	d
R_X86_64_DTPOFF64	elfdef.h	2466;"	d
R_X86_64_GLOB_DAT	elfdef.h	2454;"	d
R_X86_64_GOT32	elfdef.h	2451;"	d
R_X86_64_GOT64	elfdef.h	2480;"	d
R_X86_64_GOTOFF64	elfdef.h	2477;"	d
R_X86_64_GOTPC32	elfdef.h	2478;"	d
R_X86_64_GOTPC32_TLSDESC	elfdef.h	2489;"	d
R_X86_64_GOTPC64	elfdef.h	2483;"	d
R_X86_64_GOTPCREL	elfdef.h	2457;"	d
R_X86_64_GOTPCREL64	elfdef.h	2481;"	d
R_X86_64_GOTPLT64	elfdef.h	2484;"	d
R_X86_64_GOTTPOFF	elfdef.h	2473;"	d
R_X86_64_IRELATIVE	elfdef.h	2493;"	d
R_X86_64_JUMP_SLOT	elfdef.h	2455;"	d
R_X86_64_NONE	elfdef.h	2448;"	d
R_X86_64_NUM	elfdef.h	2495;"	d
R_X86_64_PC16	elfdef.h	2462;"	d
R_X86_64_PC32	elfdef.h	2450;"	d
R_X86_64_PC64	elfdef.h	2476;"	d
R_X86_64_PC8	elfdef.h	2464;"	d
R_X86_64_PLT32	elfdef.h	2452;"	d
R_X86_64_PLTOFF64	elfdef.h	2485;"	d
R_X86_64_RELATIVE	elfdef.h	2456;"	d
R_X86_64_SIZE32	elfdef.h	2487;"	d
R_X86_64_SIZE64	elfdef.h	2488;"	d
R_X86_64_TLSDESC	elfdef.h	2492;"	d
R_X86_64_TLSDESC_CALL	elfdef.h	2490;"	d
R_X86_64_TLSGD	elfdef.h	2468;"	d
R_X86_64_TLSLD	elfdef.h	2470;"	d
R_X86_64_TPOFF32	elfdef.h	2475;"	d
R_X86_64_TPOFF64	elfdef.h	2467;"	d
SCREEN_H	screen.h	2;"	d
SELFMAG	elfdef.h	88;"	d
SHF_ALLOC	elfdef.h	307;"	d
SHF_ALPHA_GPREL	elfdef.h	1726;"	d
SHF_ARM_COMDEF	elfdef.h	2074;"	d
SHF_ARM_ENTRYSECT	elfdef.h	2073;"	d
SHF_EXCLUDE	elfdef.h	321;"	d
SHF_EXECINSTR	elfdef.h	308;"	d
SHF_GROUP	elfdef.h	315;"	d
SHF_IA_64_NORECOV	elfdef.h	2175;"	d
SHF_IA_64_SHORT	elfdef.h	2174;"	d
SHF_INFO_LINK	elfdef.h	311;"	d
SHF_LINK_ORDER	elfdef.h	312;"	d
SHF_MASKOS	elfdef.h	317;"	d
SHF_MASKPROC	elfdef.h	318;"	d
SHF_MERGE	elfdef.h	309;"	d
SHF_MIPS_ADDR	elfdef.h	1235;"	d
SHF_MIPS_GPREL	elfdef.h	1233;"	d
SHF_MIPS_LOCAL	elfdef.h	1238;"	d
SHF_MIPS_MERGE	elfdef.h	1234;"	d
SHF_MIPS_NAMES	elfdef.h	1239;"	d
SHF_MIPS_NODUPE	elfdef.h	1240;"	d
SHF_MIPS_NOSTRIP	elfdef.h	1237;"	d
SHF_MIPS_STRINGS	elfdef.h	1236;"	d
SHF_ORDERED	elfdef.h	319;"	d
SHF_OS_NONCONFORMING	elfdef.h	313;"	d
SHF_PARISC_HUGE	elfdef.h	1554;"	d
SHF_PARISC_SBP	elfdef.h	1555;"	d
SHF_PARISC_SHORT	elfdef.h	1553;"	d
SHF_STRINGS	elfdef.h	310;"	d
SHF_TLS	elfdef.h	316;"	d
SHF_WRITE	elfdef.h	306;"	d
SHN_ABS	elfdef.h	260;"	d
SHN_AFTER	elfdef.h	255;"	d
SHN_BEFORE	elfdef.h	253;"	d
SHN_COMMON	elfdef.h	261;"	d
SHN_HIOS	elfdef.h	259;"	d
SHN_HIPROC	elfdef.h	257;"	d
SHN_HIRESERVE	elfdef.h	263;"	d
SHN_LOOS	elfdef.h	258;"	d
SHN_LOPROC	elfdef.h	252;"	d
SHN_LORESERVE	elfdef.h	251;"	d
SHN_MIPS_ACOMMON	elfdef.h	1183;"	d
SHN_MIPS_DATA	elfdef.h	1185;"	d
SHN_MIPS_SCOMMON	elfdef.h	1186;"	d
SHN_MIPS_SUNDEFINED	elfdef.h	1187;"	d
SHN_MIPS_TEXT	elfdef.h	1184;"	d
SHN_PARISC_ANSI_COMMON	elfdef.h	1541;"	d
SHN_PARISC_HUGE_COMMON	elfdef.h	1543;"	d
SHN_UNDEF	elfdef.h	250;"	d
SHN_XINDEX	elfdef.h	262;"	d
SHT_ALPHA_DEBUG	elfdef.h	1721;"	d
SHT_ALPHA_REGINFO	elfdef.h	1722;"	d
SHT_ARM_ATTRIBUTES	elfdef.h	2089;"	d
SHT_ARM_EXIDX	elfdef.h	2087;"	d
SHT_ARM_PREEMPTMAP	elfdef.h	2088;"	d
SHT_CHECKSUM	elfdef.h	289;"	d
SHT_DYNAMIC	elfdef.h	273;"	d
SHT_DYNSYM	elfdef.h	278;"	d
SHT_FINI_ARRAY	elfdef.h	280;"	d
SHT_GNU_ATTRIBUTES	elfdef.h	286;"	d
SHT_GNU_HASH	elfdef.h	287;"	d
SHT_GNU_LIBLIST	elfdef.h	288;"	d
SHT_GNU_verdef	elfdef.h	294;"	d
SHT_GNU_verneed	elfdef.h	295;"	d
SHT_GNU_versym	elfdef.h	296;"	d
SHT_GROUP	elfdef.h	282;"	d
SHT_HASH	elfdef.h	272;"	d
SHT_HIOS	elfdef.h	298;"	d
SHT_HIPROC	elfdef.h	300;"	d
SHT_HISUNW	elfdef.h	297;"	d
SHT_HIUSER	elfdef.h	302;"	d
SHT_IA_64_EXT	elfdef.h	2170;"	d
SHT_IA_64_UNWIND	elfdef.h	2171;"	d
SHT_INIT_ARRAY	elfdef.h	279;"	d
SHT_LOOS	elfdef.h	285;"	d
SHT_LOPROC	elfdef.h	299;"	d
SHT_LOSUNW	elfdef.h	290;"	d
SHT_LOUSER	elfdef.h	301;"	d
SHT_MIPS_AUXSYM	elfdef.h	1210;"	d
SHT_MIPS_CONFLICT	elfdef.h	1193;"	d
SHT_MIPS_CONTENT	elfdef.h	1202;"	d
SHT_MIPS_DEBUG	elfdef.h	1196;"	d
SHT_MIPS_DELTACLASS	elfdef.h	1217;"	d
SHT_MIPS_DELTADECL	elfdef.h	1219;"	d
SHT_MIPS_DELTAINST	elfdef.h	1216;"	d
SHT_MIPS_DELTASYM	elfdef.h	1215;"	d
SHT_MIPS_DENSE	elfdef.h	1207;"	d
SHT_MIPS_DWARF	elfdef.h	1218;"	d
SHT_MIPS_EH_REGION	elfdef.h	1227;"	d
SHT_MIPS_EVENTS	elfdef.h	1221;"	d
SHT_MIPS_EXTSYM	elfdef.h	1206;"	d
SHT_MIPS_FDESC	elfdef.h	1205;"	d
SHT_MIPS_GPTAB	elfdef.h	1194;"	d
SHT_MIPS_IFACE	elfdef.h	1201;"	d
SHT_MIPS_LIBLIST	elfdef.h	1191;"	d
SHT_MIPS_LINE	elfdef.h	1213;"	d
SHT_MIPS_LOCSTR	elfdef.h	1212;"	d
SHT_MIPS_LOCSYM	elfdef.h	1209;"	d
SHT_MIPS_MSYM	elfdef.h	1192;"	d
SHT_MIPS_OPTIONS	elfdef.h	1203;"	d
SHT_MIPS_OPTSYM	elfdef.h	1211;"	d
SHT_MIPS_PACKAGE	elfdef.h	1198;"	d
SHT_MIPS_PACKSYM	elfdef.h	1199;"	d
SHT_MIPS_PDESC	elfdef.h	1208;"	d
SHT_MIPS_PDR_EXCEPTION	elfdef.h	1229;"	d
SHT_MIPS_PIXIE	elfdef.h	1223;"	d
SHT_MIPS_REGINFO	elfdef.h	1197;"	d
SHT_MIPS_RELD	elfdef.h	1200;"	d
SHT_MIPS_RFDESC	elfdef.h	1214;"	d
SHT_MIPS_SHDR	elfdef.h	1204;"	d
SHT_MIPS_SYMBOL_LIB	elfdef.h	1220;"	d
SHT_MIPS_TRANSLATE	elfdef.h	1222;"	d
SHT_MIPS_UCODE	elfdef.h	1195;"	d
SHT_MIPS_WHIRL	elfdef.h	1226;"	d
SHT_MIPS_XLATE	elfdef.h	1224;"	d
SHT_MIPS_XLATE_DEBUG	elfdef.h	1225;"	d
SHT_MIPS_XLATE_OLD	elfdef.h	1228;"	d
SHT_NOBITS	elfdef.h	275;"	d
SHT_NOTE	elfdef.h	274;"	d
SHT_NULL	elfdef.h	267;"	d
SHT_NUM	elfdef.h	284;"	d
SHT_PARISC_DOC	elfdef.h	1549;"	d
SHT_PARISC_EXT	elfdef.h	1547;"	d
SHT_PARISC_UNWIND	elfdef.h	1548;"	d
SHT_PREINIT_ARRAY	elfdef.h	281;"	d
SHT_PROGBITS	elfdef.h	268;"	d
SHT_REL	elfdef.h	276;"	d
SHT_RELA	elfdef.h	271;"	d
SHT_SHLIB	elfdef.h	277;"	d
SHT_STRTAB	elfdef.h	270;"	d
SHT_SUNW_COMDAT	elfdef.h	292;"	d
SHT_SUNW_move	elfdef.h	291;"	d
SHT_SUNW_syminfo	elfdef.h	293;"	d
SHT_SYMTAB	elfdef.h	269;"	d
SHT_SYMTAB_SHNDX	elfdef.h	283;"	d
STB_GLOBAL	elfdef.h	374;"	d
STB_GNU_UNIQUE	elfdef.h	378;"	d
STB_HIOS	elfdef.h	379;"	d
STB_HIPROC	elfdef.h	381;"	d
STB_LOCAL	elfdef.h	373;"	d
STB_LOOS	elfdef.h	377;"	d
STB_LOPROC	elfdef.h	380;"	d
STB_MIPS_SPLIT_COMMON	elfdef.h	1254;"	d
STB_NUM	elfdef.h	376;"	d
STB_WEAK	elfdef.h	375;"	d
STN_UNDEF	elfdef.h	404;"	d
STO_ALPHA_NOPV	elfdef.h	1729;"	d
STO_ALPHA_STD_GPLOAD	elfdef.h	1730;"	d
STO_MIPS_DEFAULT	elfdef.h	1246;"	d
STO_MIPS_HIDDEN	elfdef.h	1248;"	d
STO_MIPS_INTERNAL	elfdef.h	1247;"	d
STO_MIPS_PLT	elfdef.h	1250;"	d
STO_MIPS_PROTECTED	elfdef.h	1249;"	d
STO_MIPS_SC_ALIGN_UNUSED	elfdef.h	1251;"	d
STT_ARM_16BIT	elfdef.h	2070;"	d
STT_ARM_TFUNC	elfdef.h	2069;"	d
STT_COMMON	elfdef.h	390;"	d
STT_FILE	elfdef.h	389;"	d
STT_FUNC	elfdef.h	387;"	d
STT_GNU_IFUNC	elfdef.h	394;"	d
STT_HIOS	elfdef.h	395;"	d
STT_HIPROC	elfdef.h	397;"	d
STT_HP_OPAQUE	elfdef.h	1561;"	d
STT_HP_STUB	elfdef.h	1562;"	d
STT_LOOS	elfdef.h	393;"	d
STT_LOPROC	elfdef.h	396;"	d
STT_NOTYPE	elfdef.h	385;"	d
STT_NUM	elfdef.h	392;"	d
STT_OBJECT	elfdef.h	386;"	d
STT_PARISC_MILLICODE	elfdef.h	1559;"	d
STT_SECTION	elfdef.h	388;"	d
STT_SPARC_REGISTER	elfdef.h	1016;"	d
STT_TLS	elfdef.h	391;"	d
STV_DEFAULT	elfdef.h	412;"	d
STV_HIDDEN	elfdef.h	414;"	d
STV_INTERNAL	elfdef.h	413;"	d
STV_PROTECTED	elfdef.h	415;"	d
SYMINFO_BT_LOWRESERVE	elfdef.h	351;"	d
SYMINFO_BT_PARENT	elfdef.h	350;"	d
SYMINFO_BT_SELF	elfdef.h	349;"	d
SYMINFO_CURRENT	elfdef.h	361;"	d
SYMINFO_FLG_COPY	elfdef.h	356;"	d
SYMINFO_FLG_DIRECT	elfdef.h	354;"	d
SYMINFO_FLG_LAZYLOAD	elfdef.h	357;"	d
SYMINFO_FLG_PASSTHRU	elfdef.h	355;"	d
SYMINFO_NONE	elfdef.h	360;"	d
SYMINFO_NUM	elfdef.h	362;"	d
SYSCALL_H	syscall.h	2;"	d
TASK_H	task.h	2;"	d
TESTMOD_H	testmod.h	2;"	d
TIMER_H	timer.h	2;"	d
VER_DEF_CURRENT	elfdef.h	697;"	d
VER_DEF_NONE	elfdef.h	696;"	d
VER_DEF_NUM	elfdef.h	698;"	d
VER_FLG_BASE	elfdef.h	701;"	d
VER_FLG_WEAK	elfdef.h	702;"	d
VER_FLG_WEAK	elfdef.h	753;"	d
VER_NDX_ELIMINATE	elfdef.h	708;"	d
VER_NDX_GLOBAL	elfdef.h	706;"	d
VER_NDX_LOCAL	elfdef.h	705;"	d
VER_NDX_LORESERVE	elfdef.h	707;"	d
VER_NEED_CURRENT	elfdef.h	736;"	d
VER_NEED_NONE	elfdef.h	735;"	d
VER_NEED_NUM	elfdef.h	737;"	d
VFS_BLOCKDEVICE	vfs.h	9;"	d
VFS_CHARDEVICE	vfs.h	8;"	d
VFS_DIRECTORY	vfs.h	7;"	d
VFS_FILE	vfs.h	6;"	d
VFS_H	vfs.h	2;"	d
VFS_MOUNTPOINT	vfs.h	12;"	d
VFS_PIPE	vfs.h	10;"	d
VFS_SYMLINK	vfs.h	11;"	d
VM_CLIP_EXEC	vm.h	10;"	d
VM_CLIP_MEM	vm.h	7;"	d
VM_CLIP_PRIVATE	vm.h	11;"	d
VM_CLIP_READ	vm.h	8;"	d
VM_CLIP_WRITE	vm.h	9;"	d
VM_H	vm.h	2;"	d
_INTSIZEOF	common.h	13;"	d
_syscall_test	syscall.c	/^void _syscall_test()$/;"	f
a_type	elfdef.h	/^  u32int a_type;		\/* Entry type *\/$/;"	m	struct:__anon14
a_un	elfdef.h	/^    } a_un;$/;"	m	struct:__anon14	typeref:union:__anon14::__anon15
a_val	elfdef.h	/^      u32int a_val;		\/* Integer value *\/$/;"	m	union:__anon14::__anon15
access	desc_table.h	/^    u8int access;$/;"	m	struct:gdt_entry
accessed	paging.h	/^    u32int accessed : 1;$/;"	m	struct:__anon28
addr	multiboot.h	/^   u32int addr;$/;"	m	struct:multiboot
addr	paging.h	/^    u32int addr : 20;$/;"	m	struct:__anon28
addr	paging.h	/^    u32int addr;$/;"	m	struct:__anon30
alloc_addr	kheap.h	/^    order_array_t alloc_addr;$/;"	m	struct:__anon33
alloc_frame	paging.c	/^void alloc_frame(page_t *page, u8int is_user, u8int is_writable)$/;"	f
apm_table	multiboot.h	/^   u32int apm_table;$/;"	m	struct:multiboot
arr	testmod.c	/^u32int arr[63] = {1};$/;"	v
avail	paging.h	/^    u32int avail : 3;$/;"	m	struct:__anon28
base	desc_table.h	/^    u32int base;$/;"	m	struct:gdt_ptr
base	desc_table.h	/^    u32int base;$/;"	m	struct:idt_ptr
base_high	desc_table.h	/^    u8int base_high;$/;"	m	struct:gdt_entry
base_low	desc_table.h	/^    u16int base_low;$/;"	m	struct:gdt_entry
base_middle	desc_table.h	/^    u8int base_middle;$/;"	m	struct:gdt_entry
basename	common.c	/^char *basename(char *s)$/;"	f
begin_op_vm	vm.c	/^void begin_op_vm(vm_t *vm)$/;"	f
boot_device	multiboot.h	/^   u32int boot_device;$/;"	m	struct:multiboot
boot_loader_name	multiboot.h	/^   u32int boot_loader_name;$/;"	m	struct:multiboot
brk	vm.h	/^    u32int brk;$/;"	m	struct:vm_struct
call	boot.s	/^call kmain                   ; call our main() function.$/;"	l
cleanup	module.h	/^    void (*cleanup)();$/;"	m	struct:__anon27
cleanup	vfs.h	/^    void (*cleanup)(struct fs_driver *);$/;"	m	struct:fs_driver
clear_frame	paging.c	/^void clear_frame(u32int frame_addr)$/;"	f
cli	boot.s	/^cli                         ; Disable interrupts.$/;"	l
clips	vm.h	/^    vm_clip_t *clips;$/;"	m	struct:vm_struct
clone_directory	paging.c	/^page_directory_t *clone_directory(page_directory_t *dir)$/;"	f
clone_table	paging.c	/^page_table_t *clone_table(page_table_t *table, u32int *phys)$/;"	f
close	vfs.h	/^    void (*close)(struct vnode *vnode);$/;"	m	struct:vnode
cmdline	multiboot.h	/^   u32int cmdline;$/;"	m	struct:multiboot
compact	kheap.c	/^void compact(u32int new_size, heap_t *heap)$/;"	f
config_table	multiboot.h	/^   u32int config_table;$/;"	m	struct:multiboot
copy_kernel_stack	task.c	/^void copy_kernel_stack(u32int src, page_directory_t *src_dir, u32int dst, page_directory_t *dst_dir)$/;"	f
copy_page	paging.c	/^void copy_page(page_t *src, page_t *dst)$/;"	f
copy_physical_frame	process.s	/^copy_physical_frame:$/;"	l
covered	vfs.h	/^    struct vnode *covered;$/;"	m	struct:vnode	typeref:struct:vnode::vnode
cr3	desc_table.h	/^    u32int cr3;   $/;"	m	struct:tss_entry_struct
create_heap	kheap.c	/^heap_t *create_heap(u32int start_addr, u32int end_addr, u32int max_end_addr, u32int supervisor, u32int writable)$/;"	f
create_order_array	order_array.c	/^order_array_t create_order_array(u32int max_size, less_than_func_t func)$/;"	f
createfs	vfs.h	/^    fs_t* (*createfs)(struct fs_driver *, vnode_t *dev, u32int flags, void *data);$/;"	m	struct:fs_driver
cs	desc_table.h	/^    u32int cs;         \/\/ The value to load into CS when we change to kernel mode.$/;"	m	struct:tss_entry_struct
cs	isr.h	/^    u32int eip, cs, eflags, user_esp, ss;$/;"	m	struct:__anon36
current_dir	paging.c	/^page_directory_t *current_dir = 0;$/;"	v
current_task	task.c	/^task_t *current_task = 0;$/;"	v
cursor_x	screen.c	/^u8int cursor_x, cursor_y;$/;"	v
cursor_y	screen.c	/^u8int cursor_x, cursor_y;$/;"	v
d_ptr	elfdef.h	/^      Elf32_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon8::__anon9
d_tag	elfdef.h	/^  Elf32_Sword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon8
d_un	elfdef.h	/^    } d_un;$/;"	m	struct:__anon8	typeref:union:__anon8::__anon9
d_val	elfdef.h	/^      Elf32_Word d_val;			\/* Integer value *\/$/;"	m	union:__anon8::__anon9
dd	boot.s	/^dd  MBOOT_CHECKSUM            ; To ensure that the above values are correct$/;"	l
dd	boot.s	/^dd  MBOOT_HEADER_FLAGS        ; How GRUB should load your file \/ settings$/;"	l
dd	boot.s	/^dd  MBOOT_HEADER_MAGIC        ; GRUB will search for this value on each$/;"	l
dd	boot.s	/^dd  bss                       ; End of kernel '.data' section.$/;"	l
dd	boot.s	/^dd  code                      ; Start of kernel '.text' (code) section.$/;"	l
dd	boot.s	/^dd  mboot                     ; Location of this descriptor$/;"	l
dd	boot.s	/^dd  start                     ; Kernel entry point (initial EIP).$/;"	l
dev_node	fs/initrdfs.c	/^vnode_t *dev_node;$/;"	v
dir	task.h	/^    page_directory_t *dir;$/;"	m	struct:task
dir	vm.h	/^    page_directory_t *dir;$/;"	m	struct:vm_struct
dirname	common.c	/^char *dirname(char *s)$/;"	f
dirty	paging.h	/^    u32int dirty : 1;$/;"	m	struct:__anon28
do_execve	task.c	/^void do_execve(char *path, char **argv, char **envp)$/;"	f
driver	fs/initrdfs.c	/^fs_driver_t *driver;$/;"	v
driver	vfs.h	/^    struct fs_driver *driver;$/;"	m	struct:fs	typeref:struct:fs::fs_driver
drives_addr	multiboot.h	/^   u32int drives_addr;$/;"	m	struct:multiboot
drives_length	multiboot.h	/^   u32int drives_length;$/;"	m	struct:multiboot
ds	desc_table.h	/^    u32int ds;         \/\/ The value to load into DS when we change to kernel mode.$/;"	m	struct:tss_entry_struct
ds	isr.h	/^    u32int ds;$/;"	m	struct:__anon36
dump_initrd	main.c	/^void dump_initrd()$/;"	f
dump_order_array	order_array.c	/^void dump_order_array(order_array_t *array)$/;"	f
dump_vnode	vfs.c	/^void dump_vnode(vnode_t *node)$/;"	f
e_ehsize	elfdef.h	/^  Elf32_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon1
e_entry	elfdef.h	/^  Elf32_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon1
e_flags	elfdef.h	/^  Elf32_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon1
e_ident	elfdef.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon1
e_machine	elfdef.h	/^  Elf32_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon1
e_phentsize	elfdef.h	/^  Elf32_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon1
e_phnum	elfdef.h	/^  Elf32_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon1
e_phoff	elfdef.h	/^  Elf32_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon1
e_shentsize	elfdef.h	/^  Elf32_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon1
e_shnum	elfdef.h	/^  Elf32_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon1
e_shoff	elfdef.h	/^  Elf32_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon1
e_shstrndx	elfdef.h	/^  Elf32_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon1
e_type	elfdef.h	/^  Elf32_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon1
e_version	elfdef.h	/^  Elf32_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon1
eax	desc_table.h	/^    u32int eax;$/;"	m	struct:tss_entry_struct
eax	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
ebp	desc_table.h	/^    u32int ebp;$/;"	m	struct:tss_entry_struct
ebp	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
ebp	task.h	/^    u32int ebp;$/;"	m	struct:task
ebx	desc_table.h	/^    u32int ebx;$/;"	m	struct:tss_entry_struct
ebx	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
ecx	desc_table.h	/^    u32int ecx;$/;"	m	struct:tss_entry_struct
ecx	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
edi	desc_table.h	/^    u32int edi;$/;"	m	struct:tss_entry_struct
edi	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
edx	desc_table.h	/^    u32int edx;$/;"	m	struct:tss_entry_struct
edx	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
eflags	desc_table.h	/^    u32int eflags;$/;"	m	struct:tss_entry_struct
eflags	isr.h	/^    u32int eip, cs, eflags, user_esp, ss;$/;"	m	struct:__anon36
eip	desc_table.h	/^    u32int eip;   $/;"	m	struct:tss_entry_struct
eip	isr.h	/^    u32int eip, cs, eflags, user_esp, ss;$/;"	m	struct:__anon36
eip	task.h	/^    u32int eip;$/;"	m	struct:task
end	vm.h	/^    u32int end;$/;"	m	struct:vm_clip_struct
end_addr	kheap.h	/^    u32int end_addr;$/;"	m	struct:__anon33
end_code	vm.h	/^    u32int end_code;$/;"	m	struct:vm_struct
end_data	vm.h	/^    u32int end_data;$/;"	m	struct:vm_struct
end_op_vm	vm.c	/^void end_op_vm(vm_t *vm)$/;"	f
end_stack	vm.h	/^    u32int end_stack;   \/\/ initially (0xd0000000 - 0x1000)$/;"	m	struct:vm_struct
entry	vm.h	/^    u32int entry;      \/\/ task's entry point$/;"	m	struct:vm_struct
errcode	isr.h	/^    u32int int_no, errcode;$/;"	m	struct:__anon36
es	desc_table.h	/^    u32int es;         \/\/ The value to load into ES when we change to kernel mode.$/;"	m	struct:tss_entry_struct
esi	desc_table.h	/^    u32int esi;$/;"	m	struct:tss_entry_struct
esi	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
esp	desc_table.h	/^    u32int esp;$/;"	m	struct:tss_entry_struct
esp	isr.h	/^    u32int edi, esi, ebp, esp, ebx, edx, ecx, eax;$/;"	m	struct:__anon36
esp	task.h	/^    u32int esp;$/;"	m	struct:task
esp0	desc_table.h	/^    u32int esp0;       \/\/ The stack pointer to load when we change to kernel mode.$/;"	m	struct:tss_entry_struct
esp1	desc_table.h	/^    u32int esp1;       \/\/ Unused...$/;"	m	struct:tss_entry_struct
esp2	desc_table.h	/^    u32int esp2;  $/;"	m	struct:tss_entry_struct
execve	task.c	/^void execve(char *path, char **argv, char **envp)$/;"	f
expand	kheap.c	/^void expand(u32int new_size, heap_t *heap)$/;"	f
file_nodes	fs/initrdfs.c	/^vnode_t *file_nodes;$/;"	v
finddir	vfs.h	/^    struct vnode* (*finddir)(struct vnode *vnode, const char *name);$/;"	m	struct:vnode	typeref:struct:vnode::finddir
first_fit	kheap.c	/^u32int first_fit(u32int sz, u8int align, heap_t *heap)$/;"	f
first_frame	paging.c	/^u32int first_frame()$/;"	f
flags	multiboot.h	/^   u32int flags;$/;"	m	struct:multiboot
flags	vfs.h	/^    u32int flags;   \/\/filetype $/;"	m	struct:vnode
flags	vm.h	/^    u32int flags;$/;"	m	struct:vm_clip_struct
footer_t	kheap.h	/^} footer_t;$/;"	t	typeref:struct:__anon32
fork	syscall.h	/^DECL_SYSCALL_0(fork);$/;"	v
fork	task.c	/^u32int fork()$/;"	f
frames	paging.c	/^u32int *frames = 0;$/;"	v
free	kheap.c	/^void free(void *p, heap_t *heap)$/;"	f
free_frame	paging.c	/^void free_frame(page_t *page)$/;"	f
free_vm_clips	vm.c	/^void free_vm_clips(vm_t *vm)$/;"	f
fs	desc_table.h	/^    u32int fs;         \/\/ The value to load into FS when we change to kernel mode.$/;"	m	struct:tss_entry_struct
fs	vfs.h	/^typedef struct fs {$/;"	s
fs_driver	vfs.h	/^typedef struct fs_driver {$/;"	s
fs_driver_t	vfs.h	/^} fs_driver_t;$/;"	t	typeref:struct:fs_driver
fs_drivers	vfs.c	/^fs_driver_t *fs_drivers = 0;$/;"	v
fs_t	vfs.h	/^} fs_t;$/;"	t	typeref:struct:fs
gdt_entries	desc_table.c	/^gdt_entry_t gdt_entries[5];$/;"	v
gdt_entry	desc_table.h	/^struct gdt_entry {$/;"	s
gdt_entry_t	desc_table.h	/^typedef struct gdt_entry gdt_entry_t;$/;"	t	typeref:struct:gdt_entry
gdt_flush	dt_flush.s	/^gdt_flush:$/;"	l
gdt_ptr	desc_table.c	/^gdt_ptr_t gdt_ptr;$/;"	v
gdt_ptr	desc_table.h	/^struct gdt_ptr {$/;"	s
gdt_ptr_t	desc_table.h	/^typedef struct gdt_ptr gdt_ptr_t;$/;"	t	typeref:struct:gdt_ptr
gdt_set_entry	desc_table.c	/^void gdt_set_entry(gdt_entry_t *entry, u32int base, u32int limit, u8int access, u8int gran)$/;"	f
general_protection_handler	task.c	/^void general_protection_handler(registers_t *regs)$/;"	f
get_fs_driver_byname	vfs.c	/^fs_driver_t* get_fs_driver_byname(const char *name)$/;"	f
get_module_name	module.c	/^char *get_module_name(char *path)$/;"	f
get_page	paging.c	/^page_t *get_page(u32int vaddr, u32int make, page_directory_t *dir)$/;"	f
get_pid	task.c	/^u32int get_pid()$/;"	f
get_root	vfs.h	/^    vnode_t* (*get_root)(struct fs *fs);$/;"	m	struct:fs
get_vm_clip_cover	vm.c	/^vm_clip_t* get_vm_clip_cover(vm_t *vm, u32int start)$/;"	f
get_vm_clip_cover2	vm.c	/^vm_clip_t* get_vm_clip_cover2(vm_t *vm, u32int start, u32int end)$/;"	f
get_vm_free_start	vm.c	/^u32int get_vm_free_start(vm_t *vm, u32int start, u32int size)$/;"	f
gid	vfs.h	/^    u32int gid;$/;"	m	struct:vnode
gran	desc_table.h	/^    u8int gran; \/\/ lower 4 bits of gran is higher 4 bits of limit;$/;"	m	struct:gdt_entry
gs	desc_table.h	/^    u32int gs;         \/\/ The value to load into GS when we change to kernel mode.$/;"	m	struct:tss_entry_struct
gt_bytes	elfdef.h	/^      Elf32_Word gt_bytes;		\/* This many bytes would be used *\/$/;"	m	struct:__anon17::__anon19
gt_current_g_value	elfdef.h	/^      Elf32_Word gt_current_g_value;	\/* -G value used for compilation *\/$/;"	m	struct:__anon17::__anon18
gt_entry	elfdef.h	/^    } gt_entry;				\/* Subsequent entries in section *\/$/;"	m	union:__anon17	typeref:struct:__anon17::__anon19
gt_g_value	elfdef.h	/^      Elf32_Word gt_g_value;		\/* If this value were used for -G *\/$/;"	m	struct:__anon17::__anon19
gt_header	elfdef.h	/^    } gt_header;			\/* First entry in section *\/$/;"	m	union:__anon17	typeref:struct:__anon17::__anon18
gt_unused	elfdef.h	/^      Elf32_Word gt_unused;		\/* Not used *\/$/;"	m	struct:__anon17::__anon18
header	kheap.h	/^    header_t *header;$/;"	m	struct:__anon32
header_t	kheap.h	/^} header_t;$/;"	t	typeref:struct:__anon31
heap_t	kheap.h	/^} heap_t;$/;"	t	typeref:struct:__anon33
hwp_flags1	elfdef.h	/^  Elf32_Word hwp_flags1;	\/* Extra flags.  *\/$/;"	m	struct:__anon22
hwp_flags2	elfdef.h	/^  Elf32_Word hwp_flags2;	\/* Extra flags.  *\/$/;"	m	struct:__anon22
id	vfs.h	/^    u32int id;   \/\/device-specific$/;"	m	struct:vnode
idt_entries	desc_table.c	/^idt_entry_t idt_entries[256];$/;"	v
idt_entry	desc_table.h	/^struct idt_entry {$/;"	s
idt_entry_t	desc_table.h	/^typedef struct idt_entry idt_entry_t;$/;"	t	typeref:struct:idt_entry
idt_flush	dt_flush.s	/^idt_flush:$/;"	l
idt_ptr	desc_table.c	/^idt_ptr_t idt_ptr;$/;"	v
idt_ptr	desc_table.h	/^struct idt_ptr {$/;"	s
idt_ptr_t	desc_table.h	/^typedef struct idt_ptr idt_ptr_t;$/;"	t	typeref:struct:idt_ptr
idt_set_entry	desc_table.c	/^void idt_set_entry(idt_entry_t *entry, u32int offset, u16int selector, u8int type_attr)$/;"	f
impl	vfs.h	/^    u32int impl; $/;"	m	struct:vnode
inb	common.c	/^u8int inb(u16int port)$/;"	f
index	order_array.h	/^    type_t *index;$/;"	m	struct:__anon24
info	elfdef.h	/^  Elf32_Word info;		\/* Kind-specific information.  *\/$/;"	m	struct:__anon21
init	module.h	/^    void (*init)();$/;"	m	struct:__anon27
init	vfs.h	/^    void (*init)(struct fs_driver *);$/;"	m	struct:fs_driver
init_gdt	desc_table.c	/^void init_gdt()$/;"	f
init_idt	desc_table.c	/^void init_idt()$/;"	f
init_module_system	module.c	/^void init_module_system(u32int num, u32int size, u32int addr, u32int strndx)$/;"	f
init_modules	main.c	/^void init_modules()$/;"	f
init_multitasking	task.c	/^void init_multitasking()$/;"	f
init_paging	paging.c	/^void init_paging()$/;"	f
init_syscalls	syscall.c	/^void init_syscalls()$/;"	f
init_timer	timer.c	/^void init_timer(u32int freq)$/;"	f
init_vfs	vfs.c	/^void init_vfs()$/;"	f
initial_esp	main.c	/^u32int initial_esp;$/;"	v
initrd_file_header	fs/initrdfs.c	/^initrdfs_file_header_t *initrd_file_header;$/;"	v
initrd_get_root	fs/initrdfs.c	/^vnode_t* initrd_get_root(fs_t *fs)$/;"	f
initrd_header	fs/initrdfs.c	/^initrdfs_header_t *initrd_header;$/;"	v
initrd_node	fs/initrdfs.c	/^vnode_t *initrd_node;$/;"	v
initrd_read	fs/initrdfs.c	/^u32int initrd_read(vnode_t *node, u32int offset, u32int sz, u8int *buffer)$/;"	f
initrd_readdir	fs/initrdfs.c	/^vnode_t* initrd_readdir(vnode_t *node, u32int i)$/;"	f
initrdfs_cleanup	fs/initrdfs.c	/^void initrdfs_cleanup(fs_driver_t *drv)$/;"	f
initrdfs_createfs	fs/initrdfs.c	/^fs_t* initrdfs_createfs(fs_driver_t *drv, vnode_t *dev, u32int flags, void *data)$/;"	f
initrdfs_file_header_t	fs/initrdfs.h	/^} __attribute__((packed)) initrdfs_file_header_t;$/;"	t	typeref:struct:__anon35
initrdfs_header_t	fs/initrdfs.h	/^} initrdfs_header_t;$/;"	t	typeref:struct:__anon34
initrdfs_init	fs/initrdfs.c	/^void initrdfs_init(fs_driver_t *drv)$/;"	f
initrdfs_removefs	fs/initrdfs.c	/^void initrdfs_removefs(fs_driver_t *drv, fs_t *fs)$/;"	f
insert_order_array	order_array.c	/^void insert_order_array(type_t item, order_array_t *array)$/;"	f
insert_vm_clip	vm.c	/^void insert_vm_clip(vm_t *vm, vm_clip_t *clip)$/;"	f
int_no	isr.h	/^    u32int int_no, errcode;$/;"	m	struct:__anon36
interrupt_handlers	isr.c	/^static isr_t interrupt_handlers[256] = {0};$/;"	v	file:
inw	common.c	/^u16int inw(u16int port)$/;"	f
iomap_base	desc_table.h	/^    u16int iomap_base;$/;"	m	struct:tss_entry_struct
irq_common_stub	interrupt.s	/^irq_common_stub:$/;"	l
irq_handler	isr.c	/^void irq_handler(registers_t regs)$/;"	f
isr_common_stub	interrupt.s	/^isr_common_stub:$/;"	l
isr_handler	isr.c	/^void isr_handler(registers_t regs)$/;"	f
isr_t	isr.h	/^typedef void (*isr_t)(registers_t *);$/;"	t
item_order_array	order_array.c	/^type_t item_order_array(u32int idx, order_array_t *array)$/;"	f
jmp	boot.s	/^jmp $                       ; Enter an infinite loop, to stop the processor$/;"	l
kernel_dir	paging.c	/^page_directory_t *kernel_dir = 0;$/;"	v
kernel_stack	vm.h	/^    u32int kernel_stack; \/\/ kernel_stack is in kernel_heap, size is 4kb, [kernel_stack-0x1000, kernel_stack)$/;"	m	struct:vm_struct
kfree	kheap.c	/^void kfree(void *p)$/;"	f
kheap	kheap.c	/^heap_t *kheap = 0;$/;"	v
kind	elfdef.h	/^  unsigned char kind;		\/* Determines interpretation of the$/;"	m	struct:__anon21
kmain	main.c	/^u32int kmain(multiboot_t *ptr, u32int esp)$/;"	f
kmalloc	kheap.c	/^u32int kmalloc(u32int sz)$/;"	f
kmalloc_a	kheap.c	/^u32int kmalloc_a(u32int sz)$/;"	f
kmalloc_ap	kheap.c	/^u32int kmalloc_ap(u32int sz, u32int *phys)$/;"	f
kmalloc_int	kheap.c	/^u32int kmalloc_int(u32int sz, u8int align, u32int *phys)$/;"	f
kmalloc_p	kheap.c	/^u32int kmalloc_p(u32int sz, u32int *phys)$/;"	f
kstack	task.h	/^    u32int kstack;$/;"	m	struct:task
ksyms	module.c	/^symtab_t *ksyms;$/;"	v
l_checksum	elfdef.h	/^  Elf32_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon23
l_flags	elfdef.h	/^  Elf32_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon23
l_name	elfdef.h	/^  Elf32_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon23
l_time_stamp	elfdef.h	/^  Elf32_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon23
l_version	elfdef.h	/^  Elf32_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon23
last_pid	task.c	/^u32int last_pid = 1;$/;"	v
ldt	desc_table.h	/^    u32int ldt;        \/\/ Unused...$/;"	m	struct:tss_entry_struct
len	module.h	/^    u32int len;$/;"	m	struct:__anon26
length	fs/initrdfs.h	/^    u32int length;$/;"	m	struct:__anon35
length	vfs.h	/^    u32int length;$/;"	m	struct:vnode
less_than_func	order_array.h	/^    less_than_func_t less_than_func;$/;"	m	struct:__anon24
less_than_func_t	order_array.h	/^typedef s8int (*less_than_func_t)(type_t, type_t);$/;"	t
limit	desc_table.h	/^    u16int limit;$/;"	m	struct:gdt_ptr
limit	desc_table.h	/^    u16int limit;$/;"	m	struct:idt_ptr
limit_low	desc_table.h	/^    u16int limit_low;$/;"	m	struct:gdt_entry
load_module	module.c	/^module_t* load_module(char *path)$/;"	f
load_program	task.c	/^u32int load_program(vm_t *vm, u8int *buf)$/;"	f
magic	fs/initrdfs.h	/^    u8int magic;$/;"	m	struct:__anon35
magic	kheap.h	/^    u32int magic;$/;"	m	struct:__anon31
magic	kheap.h	/^    u32int magic;$/;"	m	struct:__anon32
main	prog/init.c	/^int main()$/;"	f
mask	vfs.h	/^    u32int mask;    \/\/permission$/;"	m	struct:vnode
max_end_addr	kheap.h	/^    u32int max_end_addr;$/;"	m	struct:__anon33
max_size	order_array.h	/^    u32int max_size;$/;"	m	struct:__anon24
mboot	boot.s	/^mboot:$/;"	l
mboot_ptr	main.c	/^multiboot_t *mboot_ptr;$/;"	v
mem_lower	multiboot.h	/^   u32int mem_lower;$/;"	m	struct:multiboot
mem_upper	multiboot.h	/^   u32int mem_upper;$/;"	m	struct:multiboot
memcpy	common.c	/^void *memcpy(void *dst, void *src, u32int n)$/;"	f
memset	common.c	/^void memset(void *addr, u8int c, u32int n)$/;"	f
mmap_addr	multiboot.h	/^   u32int mmap_addr;$/;"	m	struct:multiboot
mmap_length	multiboot.h	/^   u32int mmap_length;$/;"	m	struct:multiboot
mods_addr	multiboot.h	/^   u32int mods_addr;$/;"	m	struct:multiboot
mods_count	multiboot.h	/^   u32int mods_count;$/;"	m	struct:multiboot
module_initrdfs_cleanup	fs/initrdfs.c	/^void module_initrdfs_cleanup()$/;"	f
module_initrdfs_init	fs/initrdfs.c	/^void module_initrdfs_init()$/;"	f
module_t	module.h	/^} module_t;$/;"	t	typeref:struct:__anon27
module_testmod_cleanup	testmod.c	/^void module_testmod_cleanup()$/;"	f
module_testmod_init	testmod.c	/^void module_testmod_init()$/;"	f
mount_root	main.c	/^void mount_root()$/;"	f
move_cursor	screen.c	/^void move_cursor()$/;"	f
move_stack	task.c	/^void move_stack(u32int new_start, u32int sz)$/;"	f
multiboot	multiboot.h	/^typedef struct multiboot {$/;"	s
multiboot_t	multiboot.h	/^} __attribute__((packed)) multiboot_t;$/;"	t	typeref:struct:multiboot
n_descsz	elfdef.h	/^  Elf32_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon16
n_namesz	elfdef.h	/^  Elf32_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon16
n_type	elfdef.h	/^  Elf32_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon16
name	fs/initrdfs.h	/^    char name[MAX_NAME_LEN]; $/;"	m	struct:__anon35
name	module.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:__anon25
name	module.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:__anon27
name	vfs.h	/^    char name[128]; \/\/filename$/;"	m	struct:vnode
name	vfs.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:fs_driver
next	task.h	/^    struct task *next;$/;"	m	struct:task	typeref:struct:task::task
next	vfs.h	/^    struct fs_driver *next;$/;"	m	struct:fs_driver	typeref:struct:fs_driver::fs_driver
next	vm.h	/^    struct vm_clip_struct *next;$/;"	m	struct:vm_clip_struct	typeref:struct:vm_clip_struct::vm_clip_struct
nfiles	fs/initrdfs.c	/^u32int nfiles;$/;"	v
nfiles	fs/initrdfs.h	/^    u32int nfiles;$/;"	m	struct:__anon34
nframes	paging.c	/^u32int nframes = 0;$/;"	v
nsyscalls	syscall.c	/^u32int nsyscalls = N_SYSCALLS;$/;"	v
num	multiboot.h	/^   u32int num;$/;"	m	struct:multiboot
offset	fs/initrdfs.h	/^    u32int offset;$/;"	m	struct:__anon35
offset_high	desc_table.h	/^    u16int offset_high;$/;"	m	struct:idt_entry
offset_low	desc_table.h	/^    u16int offset_low;$/;"	m	struct:idt_entry
open	vfs.h	/^    void (*open)(struct vnode *vnode);$/;"	m	struct:vnode
order_array_t	order_array.h	/^} order_array_t;$/;"	t	typeref:struct:__anon24
outb	common.c	/^void outb(u16int port, u8int value)$/;"	f
p_align	elfdef.h	/^  Elf32_Word	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon7
p_filesz	elfdef.h	/^  Elf32_Word	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon7
p_flags	elfdef.h	/^  Elf32_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon7
p_memsz	elfdef.h	/^  Elf32_Word	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon7
p_offset	elfdef.h	/^  Elf32_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon7
p_paddr	elfdef.h	/^  Elf32_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon7
p_type	elfdef.h	/^  Elf32_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon7
p_vaddr	elfdef.h	/^  Elf32_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon7
page_directory_t	paging.h	/^} page_directory_t;$/;"	t	typeref:struct:__anon30
page_fault_handler	paging.c	/^void page_fault_handler(registers_t *regs)$/;"	f
page_t	paging.h	/^} page_t;$/;"	t	typeref:struct:__anon28
page_table_t	paging.h	/^} page_table_t;$/;"	t	typeref:struct:__anon29
page_tables	paging.h	/^    page_table_t *page_tables[1024];$/;"	m	struct:__anon30
pages	paging.h	/^    page_t pages[1024];$/;"	m	struct:__anon29
panic	common.c	/^void panic(const char *msg, const char *file, u32int line)$/;"	f
panic_assert	common.c	/^void panic_assert(const char *msg, const char *file, u32int line)$/;"	f
path	module.h	/^    char path[MAX_NAME_LEN];$/;"	m	struct:__anon27
pid	task.h	/^    u32int pid;$/;"	m	struct:task
place_order_array	order_array.c	/^order_array_t place_order_array(void *addr, u32int max_size, less_than_func_t func)$/;"	f
placement_addr	kheap.c	/^u32int placement_addr = (u32int)&end;$/;"	v
ppid	task.h	/^    u32int ppid;$/;"	m	struct:task
present	paging.h	/^    u32int present : 1;$/;"	m	struct:__anon28
prev	vm.h	/^    struct vm_clip_struct *prev;$/;"	m	struct:vm_clip_struct	typeref:struct:vm_clip_struct::vm_clip_struct
prev_tss	desc_table.h	/^    u32int prev_tss;   \/\/ The previous TSS - if we used hardware task switching this would form a linked list.$/;"	m	struct:tss_entry_struct
printk	screen.c	/^void printk(char *fmt, ...)$/;"	f
ptr	vfs.h	/^    struct vnode *ptr;$/;"	m	struct:vnode	typeref:struct:vnode::vnode
push	boot.s	/^push    ebx                   ; Load multiboot header location$/;"	l
push	boot.s	/^push    esp                   ; Initial esp  $/;"	l
r_addend	elfdef.h	/^  Elf32_Sword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon6
r_info	elfdef.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon5
r_info	elfdef.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon6
r_offset	elfdef.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon5
r_offset	elfdef.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon6
read	vfs.h	/^    u32int (*read)(struct vnode *vnode, u32int offset, u32int sz, u8int *buffer);$/;"	m	struct:vnode
read_eip	process.s	/^read_eip:$/;"	l
readdir	vfs.h	/^    struct vnode* (*readdir)(struct vnode *vnode, u32int i);$/;"	m	struct:vnode	typeref:struct:vnode::readdir
ready_queue	task.c	/^task_t *ready_queue = 0;$/;"	v
register_fs_driver	vfs.c	/^void register_fs_driver(fs_driver_t *driver)$/;"	f
register_interrupt_handler	isr.c	/^void register_interrupt_handler(u32int n, isr_t handler)$/;"	f
registers_t	isr.h	/^} registers_t;$/;"	t	typeref:struct:__anon36
remove_order_array	order_array.c	/^void remove_order_array(u32int idx, order_array_t *array)$/;"	f
remove_vm_clip	vm.c	/^void remove_vm_clip(vm_t *vm, vm_clip_t *clip)$/;"	f
removefs	vfs.h	/^    void (*removefs)(struct fs_driver *, fs_t *fs);$/;"	m	struct:fs_driver
resolve_symbol	module.c	/^u32int resolve_symbol(char *sym_name)$/;"	f
ri_cprmask	elfdef.h	/^  Elf32_Word	ri_cprmask[4];		\/* Coprocessor registers used *\/$/;"	m	struct:__anon20
ri_gp_value	elfdef.h	/^  Elf32_Sword	ri_gp_value;		\/* $gp register value *\/$/;"	m	struct:__anon20
ri_gprmask	elfdef.h	/^  Elf32_Word	ri_gprmask;		\/* General registers used *\/$/;"	m	struct:__anon20
rsvd1	paging.h	/^    u32int rsvd1 : 2;$/;"	m	struct:__anon28
rsvd2	paging.h	/^    u32int rsvd2 : 2;$/;"	m	struct:__anon28
rw	kheap.h	/^    u32int rw;$/;"	m	struct:__anon33
rw	paging.h	/^    u32int rw : 1;$/;"	m	struct:__anon28
s16int	common.h	/^typedef          short s16int;$/;"	t
s32int	common.h	/^typedef          int   s32int;$/;"	t
s8int	common.h	/^typedef          char  s8int;$/;"	t
scr_clear	screen.c	/^void scr_clear()$/;"	f
scr_putch	screen.c	/^void scr_putch(char c)$/;"	f
scr_puthex	screen.c	/^void scr_puthex(u32int i)$/;"	f
scr_putn	screen.c	/^void scr_putn(u32int i)$/;"	f
scr_putp	screen.c	/^void scr_putp(const char *msg, void *p)$/;"	f
scr_puts	screen.c	/^void scr_puts(const char *s)$/;"	f
scroll	screen.c	/^void scroll()$/;"	f
section	elfdef.h	/^  Elf32_Section section;	\/* Section header index of section affected,$/;"	m	struct:__anon21
selector	desc_table.h	/^    u16int selector;$/;"	m	struct:idt_entry
set_frame	paging.c	/^void set_frame(u32int frame_addr)$/;"	f
set_kernel_stack	desc_table.c	/^void set_kernel_stack(u32int esp)$/;"	f
sh_addr	elfdef.h	/^  Elf32_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon2
sh_addralign	elfdef.h	/^  Elf32_Word	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon2
sh_entsize	elfdef.h	/^  Elf32_Word	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon2
sh_flags	elfdef.h	/^  Elf32_Word	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon2
sh_info	elfdef.h	/^  Elf32_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon2
sh_link	elfdef.h	/^  Elf32_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon2
sh_name	elfdef.h	/^  Elf32_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon2
sh_offset	elfdef.h	/^  Elf32_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon2
sh_size	elfdef.h	/^  Elf32_Word	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon2
sh_type	elfdef.h	/^  Elf32_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon2
shndx	multiboot.h	/^   u32int shndx;$/;"	m	struct:multiboot
si_boundto	elfdef.h	/^  Elf32_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon4
si_flags	elfdef.h	/^  Elf32_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon4
size	elfdef.h	/^  unsigned char size;		\/* Size of descriptor, including header.  *\/$/;"	m	struct:__anon21
size	multiboot.h	/^   u32int size;$/;"	m	struct:multiboot
sprintf	common.c	/^u32int *sprintf(char *buf, char *fmt, ...)$/;"	f
ss	desc_table.h	/^    u32int ss;         \/\/ The value to load into SS when we change to kernel mode.$/;"	m	struct:tss_entry_struct
ss	isr.h	/^    u32int eip, cs, eflags, user_esp, ss;$/;"	m	struct:__anon36
ss0	desc_table.h	/^    u32int ss0;        \/\/ The stack segment to load when we change to kernel mode.$/;"	m	struct:tss_entry_struct
ss1	desc_table.h	/^    u32int ss1;$/;"	m	struct:tss_entry_struct
ss2	desc_table.h	/^    u32int ss2;   $/;"	m	struct:tss_entry_struct
st_info	elfdef.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon3
st_name	elfdef.h	/^  Elf32_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon3
st_other	elfdef.h	/^  unsigned char	st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon3
st_shndx	elfdef.h	/^  Elf32_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon3
st_size	elfdef.h	/^  Elf32_Word	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon3
st_value	elfdef.h	/^  Elf32_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon3
standard_less_than_func	order_array.c	/^s8int standard_less_than_func(type_t a, type_t b)$/;"	f
start	boot.s	/^start:$/;"	l
start	vm.h	/^    u32int start; \/* page aligned start virtual address. *\/$/;"	m	struct:vm_clip_struct
start_addr	kheap.h	/^    u32int start_addr;$/;"	m	struct:__anon33
start_brk	vm.h	/^    u32int start_brk;$/;"	m	struct:vm_struct
start_code	vm.h	/^    u32int start_code; \/\/ .text usually 0x40000000;$/;"	m	struct:vm_struct
start_data	vm.h	/^    u32int start_data; \/\/ .rodata .data .bss all combined in [start_data, end_data)$/;"	m	struct:vm_struct
start_stack	vm.h	/^    u32int start_stack; \/\/ task's userspace stack, usually 0xd0000000 start_stack > end_stack$/;"	m	struct:vm_struct
stra	testmod.c	/^char stra[127];$/;"	v
strchr	common.c	/^char *strchr(char *s1, char c)$/;"	f
strcmp	common.c	/^s32int strcmp(const char *s1, const char *s2)$/;"	f
strcpy	common.c	/^char *strcpy(char *dst, const char *src)$/;"	f
strdup	common.c	/^char *strdup(char *s)$/;"	f
strlen	common.c	/^u32int strlen(const char *s)$/;"	f
strrchr	common.c	/^char *strrchr(char *s1, char c)$/;"	f
strrstr	common.c	/^char *strrstr(char *s1, char *s2)$/;"	f
strstr	common.c	/^char *strstr(char *s1, char *s2)$/;"	f
su	kheap.h	/^    u32int su;$/;"	m	struct:__anon33
switch_page_directory	paging.c	/^void switch_page_directory(page_directory_t *dir)$/;"	f
switch_task	task.c	/^void switch_task()$/;"	f
switch_to_user_mode	task.c	/^void switch_to_user_mode()$/;"	f
symbol	module.h	/^    symbol_t symbol[MAX_SYMBOLS];$/;"	m	struct:__anon26
symbol_t	module.h	/^} symbol_t;$/;"	t	typeref:struct:__anon25
symtab_t	module.h	/^} symtab_t;$/;"	t	typeref:struct:__anon26
sync	vfs.h	/^    void (*sync)(struct fs *fs);$/;"	m	struct:fs
syscall_close	vfs.c	/^void syscall_close(const char *src, const char* dst, u32int flags, void *data)$/;"	f
syscall_create	vfs.c	/^void syscall_create(const char *src, u32int flags)$/;"	f
syscall_handler	syscall.c	/^void syscall_handler(registers_t *regs)$/;"	f
syscall_mount	vfs.c	/^void syscall_mount(const char *src, const char* dst, u32int flags, void *data)$/;"	f
syscall_open	vfs.c	/^void syscall_open(const char *src, u32int flags)$/;"	f
syscalls	syscall.c	/^void *syscalls[N_SYSCALLS] = {$/;"	v
sz	kheap.h	/^    u32int sz; \/\/ real size between header_t and footer_t$/;"	m	struct:__anon31
sz	order_array.h	/^    u32int sz;$/;"	m	struct:__anon24
table_addr	paging.h	/^    u32int table_addr[1024];$/;"	m	struct:__anon30
task	task.h	/^typedef struct task {$/;"	s
task_t	task.h	/^} task_t;$/;"	t	typeref:struct:task
test_frame	paging.c	/^u32int test_frame(u32int frame_addr)$/;"	f
testmod_func	testmod.c	/^static void (*testmod_func)(const char *);$/;"	v	file:
tick	timer.c	/^u32int tick = 0;$/;"	v
timer_irq	timer.c	/^void timer_irq(registers_t *regs)$/;"	f
trap	desc_table.h	/^    u16int trap;$/;"	m	struct:tss_entry_struct
tss0	desc_table.c	/^tss_entry_t tss0;$/;"	v
tss_entry_struct	desc_table.h	/^struct tss_entry_struct$/;"	s
tss_entry_t	desc_table.h	/^typedef struct tss_entry_struct tss_entry_t;$/;"	t	typeref:struct:tss_entry_struct
tss_flush	dt_flush.s	/^tss_flush:$/;"	l
type_attr	desc_table.h	/^    u8int type_attr;$/;"	m	struct:idt_entry
type_t	order_array.h	/^typedef void* type_t;$/;"	t
u16int	common.h	/^typedef unsigned short u16int;$/;"	t
u32int	common.h	/^typedef unsigned int   u32int;$/;"	t
u8int	common.h	/^typedef unsigned char  u8int;$/;"	t
uid	vfs.h	/^    u32int uid;     $/;"	m	struct:vnode
unload_module	module.c	/^void unload_module(module_t *m)$/;"	f
unregister_fs_driver	vfs.c	/^void unregister_fs_driver(fs_driver_t *driver)$/;"	f
us	paging.h	/^    u32int us : 1;$/;"	m	struct:__anon28
user_esp	isr.h	/^    u32int eip, cs, eflags, user_esp, ss;$/;"	m	struct:__anon36
va_arg	common.h	16;"	d
va_end	common.h	17;"	d
va_list	common.h	14;"	d
va_start	common.h	15;"	d
value	module.h	/^    u32int value;$/;"	m	struct:__anon25
vbe_control_info	multiboot.h	/^   u32int vbe_control_info;$/;"	m	struct:multiboot
vbe_interface_len	multiboot.h	/^   u32int vbe_interface_len;    $/;"	m	struct:multiboot
vbe_interface_off	multiboot.h	/^   u32int vbe_interface_off;$/;"	m	struct:multiboot
vbe_interface_seg	multiboot.h	/^   u32int vbe_interface_seg;$/;"	m	struct:multiboot
vbe_mode	multiboot.h	/^   u32int vbe_mode;$/;"	m	struct:multiboot
vbe_mode_info	multiboot.h	/^   u32int vbe_mode_info;$/;"	m	struct:multiboot
vd_aux	elfdef.h	/^  Elf32_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon10
vd_cnt	elfdef.h	/^  Elf32_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon10
vd_flags	elfdef.h	/^  Elf32_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon10
vd_hash	elfdef.h	/^  Elf32_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon10
vd_ndx	elfdef.h	/^  Elf32_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon10
vd_next	elfdef.h	/^  Elf32_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon10
vd_version	elfdef.h	/^  Elf32_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon10
vda_name	elfdef.h	/^  Elf32_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon11
vda_next	elfdef.h	/^  Elf32_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon11
verify_module_header	module.c	/^u32int verify_module_header(Elf32_Ehdr *header) $/;"	f
verify_program_header	task.c	/^u32int verify_program_header(Elf32_Ehdr *header) $/;"	f
vfs_close	vfs.c	/^void vfs_close(vnode_t *node)$/;"	f
vfs_finddir	vfs.c	/^vnode_t* vfs_finddir(struct vnode *vnode, const char *name)$/;"	f
vfs_lookup	vfs.c	/^vnode_t* vfs_lookup(vnode_t *node, const char *path)$/;"	f
vfs_mount	vfs.c	/^void vfs_mount(vnode_t *node, fs_t *fs)$/;"	f
vfs_open	vfs.c	/^void vfs_open(vnode_t *node)$/;"	f
vfs_read	vfs.c	/^u32int vfs_read(vnode_t *node, u32int offset, u32int sz, u8int *buffer)$/;"	f
vfs_readdir	vfs.c	/^vnode_t* vfs_readdir(struct vnode *vnode, u32int i)$/;"	f
vfs_root	vfs.c	/^vnode_t *vfs_root = 0;$/;"	v
vfs_write	vfs.c	/^u32int vfs_write(vnode_t *node, u32int offset, u32int sz, u8int *buffer)$/;"	f
video_addr	screen.c	/^u16int *video_addr = (u16int *) 0xb8000;$/;"	v
vm	task.h	/^    vm_t *vm;$/;"	m	struct:task
vm	vm.h	/^    struct vm_struct *vm;$/;"	m	struct:vm_clip_struct	typeref:struct:vm_clip_struct::vm_struct
vm_clip_struct	vm.h	/^typedef struct vm_clip_struct {$/;"	s
vm_clip_t	vm.h	/^} vm_clip_t;$/;"	t	typeref:struct:vm_clip_struct
vm_struct	vm.h	/^typedef struct vm_struct {$/;"	s
vm_t	vm.h	/^} vm_t;$/;"	t	typeref:struct:vm_struct
vn_aux	elfdef.h	/^  Elf32_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon12
vn_cnt	elfdef.h	/^  Elf32_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon12
vn_file	elfdef.h	/^  Elf32_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon12
vn_next	elfdef.h	/^  Elf32_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon12
vn_version	elfdef.h	/^  Elf32_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon12
vna_flags	elfdef.h	/^  Elf32_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon13
vna_hash	elfdef.h	/^  Elf32_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon13
vna_name	elfdef.h	/^  Elf32_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon13
vna_next	elfdef.h	/^  Elf32_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon13
vna_other	elfdef.h	/^  Elf32_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon13
vnode	vfs.h	/^typedef struct vnode {$/;"	s
vnode_t	vfs.h	/^} vnode_t;$/;"	t	typeref:struct:vnode
write	vfs.h	/^    u32int (*write)(struct vnode *vnode, u32int offset, u32int sz, u8int *buffer);$/;"	m	struct:vnode
write_tss	desc_table.c	/^void write_tss()$/;"	f
zero	desc_table.h	/^    u8int zero;$/;"	m	struct:idt_entry
